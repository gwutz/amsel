<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Planet GNOME</title>
  <updated>2018-08-05T17:54:07Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>GNOME Sysadmin Team</name>
    <email>gnome-sysadmin@gnome.org</email>
  </author>
  <id>http://planet.gnome.org/atom.xml</id>
  <link href="http://planet.gnome.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://pubsubhubbub.appspot.com/" rel="hub"/>
  <link href="http://planet.gnome.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>https://testbit.eu/2018/beast-0-12-0-beta-1</id>
    <link href="https://testbit.eu/2018/beast-0-12-0-beta-1" rel="alternate" type="text/html"/>
    <title xml:lang="en">Beast 0.12.0-beta.1</title>
    <summary xml:lang="en">Long time no see. It’s been a while since the last Beast release, mainly
because we have a lot of code migrations going on, some of which caused
severe regressions. Here are the tarball and Debian package: https://beast.testbit.org/pub/testing/beast-0.12.0-beta.1.tar.xz
https://beast.testbit.org/pub…</summary>
    <updated>2018-08-04T14:05:13Z</updated>
    <published>2018-08-04T14:05:13Z</published>
    <category term="Beast"/>
    <category term="Electronjs"/>
    <category term="FluidSynth"/>
    <category term="Debian"/>
    <source>
      <id>https://testbit.eu/atom.xml</id>
      <author>
        <name>Tim Janik</name>
      </author>
      <link href="https://testbit.eu/atom.xml" rel="self" type="application/atom+xml"/>
      <link href="https://testbit.eu" rel="alternate" type="text/html"/>
      <rights xml:lang="en">CC BY-NC 3.0 - Creative Commons Attribution-NonCommercial 3.0</rights>
      <subtitle xml:lang="en">Timj’s bits and tests</subtitle>
      <title xml:lang="en">Testbit</title>
      <updated>2018-08-04T18:35:20Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gnomegsoc2018.wordpress.com/?p=43</id>
    <link href="https://gnomegsoc2018.wordpress.com/2018/08/04/ui-polishing-and-auto-completion/" rel="alternate" type="text/html"/>
    <title>UI polishing and auto completion</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">During my Google Summer of Code project I implement message search for Dino, a XMPP client focusing on ease of use and security. Jumping to results For each search hit in the results, three messages are (partially) displayed: The actual hit and the messages before and after that. The hit is clickable and clicking it will … <a class="more-link" href="https://gnomegsoc2018.wordpress.com/2018/08/04/ui-polishing-and-auto-completion/">Continue reading <span class="screen-reader-text">UI polishing and auto completion</span> <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>During my <a href="https://wiki.gnome.org/Outreach/SummerOfCode/2018/Projects/Bobufa_Dino">Google Summer of Code project</a> I implement message search for <a href="https://dino.im">Dino</a>, a XMPP client focusing on ease of use and security.</em></p>
<h3>Jumping to results</h3>
<p>For each search hit in the results, three messages are (partially) displayed: The actual hit and the messages before and after that. The hit is clickable and clicking it will jump to the hit in the conversation history. The clicked message is highlighted with a CSS animation by fading a background color in and out.</p>
<p><img alt="Screenshot from 2018-08-04 13-59-52" class="alignnone size-large wp-image-46" height="470" src="https://gnomegsoc2018.files.wordpress.com/2018/08/screenshot-from-2018-08-04-13-59-52.png?w=1024&amp;h=470" width="1024"/></p>
<h3>Empty placeholders</h3>
<p>I added placeholders to clarify the states where no results are shown because nothing was searched yet and where no results are shown because there where no matching results. Following the <a href="https://developer.gnome.org/hig/stable/empty-placeholder.html.en">GNOME HIG</a>, the placeholders contain an icon, a state description and suggestions on how to proceed.</p>
<p><img alt="Screenshot from 2018-08-04 13-05-29" class="alignnone  wp-image-44" height="327" src="https://gnomegsoc2018.files.wordpress.com/2018/08/screenshot-from-2018-08-04-13-05-29.png?w=448&amp;h=327" width="448"/></p>
<h3>Minor change of plans</h3>
<p>In my <a href="https://gnomegsoc2018.wordpress.com/2018/05/31/first-steps/">UI mockups</a> I planed to collapse the search sidebar into only displaying the search entry after a hit was clicked. This was supposed to let the user know that a search is still active and that he/she can resume the search without requiring much screen space.</p>
<p>However, this introduced more states to the search feature and thus leaves more room for confusion. Also, reopening the search from the collapsed state would need a click/shortcut, while just completely reopening the search would require the same amount of interaction. Thus, the collapsed state does not save the user interaction steps and might be harder to understand.</p>
<p>Instead, the search text is simply not removed from the search entry when clicking on a result. When the user desires to resume the search to explore other results, he/she can open the search again and will find the old search results. The text is marked, thus simply typing over it is possible. The search text is still reset when changing conversations.</p>
<h3>Bug hunting</h3>
<p>I had to hunt down and fix some displaying issues in the history search and other bugs I introduced while refactoring parts of the conversation view structure.</p>
<h3>During the final days</h3>
<p>I have been working on user name auto-completion and nice displaying of filters. There is some final work and testing to be done on them and then I can open a PR!</p></div>
    </content>
    <updated>2018-08-04T12:52:58Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>Fabian</name>
    </author>
    <source>
      <id>https://gnomegsoc2018.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gnomegsoc2018.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://gnomegsoc2018.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gnomegsoc2018.wordpress.com/osd.xml" rel="search" title="GSoC: Dino Message Search" type="application/opensearchdescription+xml"/>
      <link href="https://gnomegsoc2018.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>GSoC: Dino Message Search</title>
      <updated>2018-08-05T17:54:06Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/mclasen/?p=2324</id>
    <link href="https://blogs.gnome.org/mclasen/2018/08/03/flatpak-portal-experiments/" rel="alternate" type="text/html"/>
    <title>Flatpak portal experiments</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">One of the signs that a piece of software is reaching a mature state is its ability to serve  use cases that nobody had anticipated when it was started. I’ve recently had this experience with Flatpak. We have been discussing some possible new directions for the GTK+ file chooser. And it occurred to me that … <a class="more-link" href="https://blogs.gnome.org/mclasen/2018/08/03/flatpak-portal-experiments/">Continue reading <span class="screen-reader-text">Flatpak portal experiments</span> <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One of the signs that a piece of software is reaching a mature state is its ability to serve  use cases that nobody had anticipated when it was started. I’ve recently had this experience with Flatpak.</p>
<p>We have been discussing some possible <a href="https://gitlab.gnome.org/GNOME/gtk/issues/1239">new directions</a> for the GTK+ file chooser. And it occurred to me that it might be convenient to use the file chooser portal as a way to experiment with different file choosers without having to change either GTK+ itself or the applications.</p>
<p>To verify this idea, I wrote a quick portal <a href="https://github.com/matthiasclasen/gtk2-portal">implementation</a> that uses the venerable GTK+ 2 file chooser.</p>
<p><a href="https://blogs.gnome.org/mclasen/files/2018/08/Screenshot-from-2018-08-03-22-58-30.png"><img alt="" class="aligncenter size-medium wp-image-2325" height="169" src="https://blogs.gnome.org/mclasen/files/2018/08/Screenshot-from-2018-08-03-22-58-30-300x169.png" width="300"/></a>Here is Corebird (a GTK+ 3 application) using the GTK+ 2 file chooser to select an image.</p></div>
    </content>
    <updated>2018-08-04T03:21:40Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>mclasen</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/mclasen</id>
      <link href="https://blogs.gnome.org/mclasen/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/mclasen" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Goings on</title>
      <updated>2018-08-04T03:21:40Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:people.gnome.org,2018-08-03:/~federico/blog/logging-in-librsvg.html</id>
    <link href="https://people.gnome.org/~federico/blog/logging-in-librsvg.html" rel="alternate" type="text/html"/>
    <title>Logging from Rust in librsvg</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Over in <a href="https://gitlab.gnome.org/GNOME/librsvg/issues/281">this issue</a> we are discussing how to add debug logging
for librsvg.</p>
<p>A popular way to add logging to Rust code is to use the <a href="https://crates.io/crates/log">log</a> crate.
This lets you sprinkle simple messages in your code:</p>
<div class="highlight"><pre><span/><span class="n">error</span><span class="o">!</span><span class="p">(</span><span class="s">"something bad happened: {}"</span><span class="p">,</span><span class="w"> </span><span class="n">foo</span><span class="p">);</span><span class="w"/>
<span class="n">debug</span><span class="o">!</span><span class="p">(</span><span class="s">"a debug message"</span><span class="p">);</span><span class="w"/>
</pre></div>


<p>However, the <a href="https://crates.io/crates/log">log …</a></p></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Over in <a href="https://gitlab.gnome.org/GNOME/librsvg/issues/281">this issue</a> we are discussing how to add debug logging
for librsvg.</p>
<p>A popular way to add logging to Rust code is to use the <a href="https://crates.io/crates/log">log</a> crate.
This lets you sprinkle simple messages in your code:</p>
<div class="highlight"><pre><span/><span class="n">error</span><span class="o">!</span><span class="p">(</span><span class="s">"something bad happened: {}"</span><span class="p">,</span><span class="w"> </span><span class="n">foo</span><span class="p">);</span><span class="w"/>
<span class="n">debug</span><span class="o">!</span><span class="p">(</span><span class="s">"a debug message"</span><span class="p">);</span><span class="w"/>
</pre></div>


<p>However, the <a href="https://crates.io/crates/log">log</a> create is just a facade, and by default the
messages do not get emitted anywhere.  The calling code has to set up
a logger.  Crates like <a href="https://crates.io/crates/env_logger">env_logger</a> let one set up a logger, during
program initialization, that gets configured through an environment
variable.</p>
<p>And this is a problem for librsvg:  we are <em>not</em> the program's
initialization!  Librsvg is a library; it doesn't have a <code>main()</code>
function.  And since most of the calling code is not Rust, we can't
assume that they can call code that can initialize the logging
framework.</p>
<h2>Why not use glib's logging stuff?</h2>
<p>Currently this is a bit clunky to use from Rust, since glib's
structured logging functions are not bound yet in <a href="http://gtk-rs.org/docs/glib/">glib-rs</a>.  Maybe it
would be good to bind them and get this over with.</p>
<h2>What user experience do we want?</h2>
<p>In the past, what has worked well for me to do logging from libraries
is to allow the user to set an environment variable to control the
logging, or to drop a log configuration file in their $HOME.  The
former works well when the user is in control of running the program
that will print the logs; the latter is useful when the user is not
directly in control, like for gnome-shell, which gets launched through
a lot of magic during session startup.</p>
<p>For librsvg, it's probably enough to just use an environment
variable.  Set <code>RSVG_LOG=parse_errors</code>, run your program, and get
useful output.  <a href="https://makezine.com/2016/06/10/push-button-receive-bacon/">Push button, receive bacon</a>.</p>
<h2>Other options in Rust?</h2>
<p>There is a <a href="https://crates.io/crates/slog">slog</a> crate which looks promising.  Instead of using
context-less macros which depend on a single global logger, it
provides logging macros to which you pass a logger object.</p>
<p>For librsvg, this means that the basic <code>RsvgHandle</code> could create its
own logger, based on an environment variable or whatever, and pass it
around to all its child functions for when they need to log something.</p>
<p>Slog supports structured logging, and seems to have some fancy output
modes.  We'll see.</p></div>
    </content>
    <updated>2018-08-04T00:29:43Z</updated>
    <published>2018-08-04T00:29:43Z</published>
    <category term="librsvg"/>
    <category term="rust"/>
    <category term="gnome"/>
    <author>
      <name>Federico Mena Quintero</name>
    </author>
    <source>
      <id>https://people.gnome.org/~federico/blog/</id>
      <link href="https://people.gnome.org/~federico/blog/" rel="alternate" type="text/html"/>
      <link href="https://people.gnome.org/~federico/blog/feeds/atom.xml" rel="self" type="application/atom+xml"/>
      <title>Federico's Blog</title>
      <updated>2018-08-04T00:29:43Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://mariospr.org/?p=2551</id>
    <link href="https://mariospr.org/2018/08/03/on-moving/" rel="alternate" type="text/html"/>
    <title>On Moving</title>
    <summary>Winds of Change. One of my favourite songs ever and one that comes to my mind now that me and my family are going through quite some important changes, once again. But let’s start from the beginning… A few years ago, back in January 2013, my family and me moved to the UK as the […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://www.youtube.com/watch?v=n4RjJKxsamQ">Winds of Change</a>. One of my favourite songs ever and one that comes to my mind now that me and my family are going through quite some important changes, once again. But let’s start from the beginning…</p>
<p>A few years ago, back in January 2013, my family and me moved to the UK as the result of <a href="https://mariospr.org/2012/11/19/moving-on/">my decision to leave Igalia</a> after almost 7 years in the company to embark ourselves in the “adventure” or living abroad. This was an idea we had been thinking about for a while already at that time, and our current situation back then suggested that it could be the right moment to try it out… so we did.</p>
<p>It was kind of a long process though: I first arrived alone in January to make sure I would have time to figure things out and find a permanent place for us to live in, and then my family joined me later in May, once everything was ready. Not great, if you ask me, to be living separated from your loved ones for 4 full months, not to mention the juggling my wife had to do during that time to combine her job with looking after the kids mostly on her own… but we managed to see each other every 2-3 weekends thanks to the London – Coruña direct flights in the meantime, so at least it was bearable from that point of view.</p>
<p>But despite of those not so great (yet expected) beginnings, I have to say that this past 5+ years have been an incredible experience overall, and we don’t have a single regret about making the decision to move, maybe just a few minor and punctual things only if I’m completely honest, but that’s about it. For instance, it’s been just beyond incredible and satisfying to see my kids develop their English skills “from zero to hero”, settle at their school, make new friends and, in one word, <em>evolve</em> during these past years. And that alone would have been a good reason to justify the move already, but it turns out we also have plenty of other reasons as we all have evolved and enjoyed the ride quite a lot as well, made many new friends, knew many new places, worked on different things… a truly enriching experience indeed!</p>
<p>In a way, I confess that this could easily be one of those things we’d probably have never done if we knew in advance of all the things we’d have to do and go through along the way, so I’m very grateful for that naive ignorance, since that’s probably how we found the courage, energy and time to do it. And looking backwards, it seems clear to me that it was the right time to do it.</p>
<p>But now it’s 2018 and, even though we had such a great time here both from personal and work-related perspectives, we have decided that it’s time for us to come back to <a href="https://en.wikipedia.org/wiki/Galicia_(Spain)">Galicia</a> (Spain), and try to continue our vital journey right from there, in our homeland.</p>
<p>And before you ask… no, this is <strong>not</strong> <strong>because</strong> of <a href="https://en.wikipedia.org/wiki/Brexit">Brexit</a>. I recognize that the result of the referendum has been a “contributing factor” (we surely didn’t think as much about returning to Spain before that 23 of June, that’s true), but there were more factors contributing to that decision, which somehow have aligned all together to tell us, very clearly, that Now It’s The Time…</p>
<p>For instance, we always knew that we would eventually move back for my wife to take over the family business, and also that we’d rather make the move in a way that it would be not too bad for our kids when it happened. And having a 6yo and a 9yo already it feels to us like now it’s the perfect time, since they’re already native English speakers (achievement unlocked!) and we believe that staying any longer would only make it harder for them, especially for my 9yo, because i<span style="font-size: 1rem;">t’s never easy to leave your school, friends and place you call home behind when you’re a kid (and I know that very well, as I went through that painful experience precisely when I was 9).</span></p>
<p><span style="font-size: 1rem;">Besides that, I’ve also recently decided to leave <a href="http://www.endlessm.com/">Endless</a> after 4 years in the company and so it looks like, once again, moving back home would fit nicely with that work-related change, for several reasons. Now, </span>I don’t want to enter into much detail on why exactly I decided to leave Endless, so I think I’ll summarize it as me needing a change and a rest after these past years working on <a href="https://endlessos.com/">Endless OS</a>, which has been an equally awesome and intense experience as you can imagine. If anything, I’d just want to be clear on that contributing to such a meaningful project surrounded by such a team of great human beings, was an experience I couldn’t be happier and prouder about, so you can be certain it was not an easy decision to make.</p>
<p>Actually, quite the opposite: a pretty hard one I’d say… but a nice “side effect” of that decision, though, is that leaving at this precise moment would allow me to focus on the relocation in a more organized way as well as to spend some quality time with my family before leaving the UK. Besides, it will hopefully be also useful for us to have enough time, once in Spain, to re-organize our lives there, settle properly and even have some extra weeks of true holidays before the kids start school and we start working again in September.</p>
<p>Now, taking a few weeks off and moving back home is very nice and all that, but we still need to have jobs, and this is where our relocation gets extra interesting as it seems that we’re moving home in multiple ways at once…</p>
<p>For once, my wife will start taking over the family business with the help of her dad in her home town of <a href="https://en.wikipedia.org/wiki/Lal%C3%ADn">Lalín (Pontevedra)</a>, where we plan to be living for the foreseeable future. This is the place where she grew up and where her family and many friends live in, but also a place she hasn’t lived in for the last 15 years, so the fact that we’ll be relocating there is already quite a thing in the “moving back home” department for her…</p>
<p>Second, for my kids this will mean going back to having their relatives nearby once again as well as friends they only could see and play with during holidays until now, which I think it’s a very good thing for them. Of course, this doesn’t feel as much moving home for them as it does for us, since they obviously consider the UK their home for now, but our hope is that it will be ok in the medium-long term, even though it will likely be a bit challenging for them at the beginning.</p>
<p>Last, I’ll be moving back to work at <a href="https://www.igalia.com/">Igalia</a> after <a href="https://mariospr.org/2012/11/19/moving-on/">almost 6 years since I left</a> which, as you might imagine, feels to me very much like “moving back home” too: I’ll be going back to working in a place I’ve always loved so much for multiple reasons, surrounded by people I know and who I consider friends already (I even would call some of them “best friends”) and with its foundations set on important principles and values that still matter very much to me, both from technical (e.g. Open Source, Free Software) and not so technical (e.g. flat structure, independence) points of view.</p>
<p>Those who know me better might very well think that I’ve never really moved on as I hinted in the title of the <a href="https://mariospr.org/2012/11/19/moving-on/">blog post I wrote years ago</a>, and in some way that’s perhaps not entirely wrong, since it’s no secret I always kept in touch throughout these past years at many levels and that I always felt enormously proud of my time as an Igalian. <a href="http://bassi.io/">Emmanuele</a> even told me that I sometimes enter what he seems to call an “Igalia mode” when I speak of my past time in there, as if I was still there… Of course, I haven’t seen any formal evidence of such thing happening yet, but it certainly does sound like a possibility as it’s true I easily get carried away when Igalia comes to my mind, maybe as a mix of nostalgia, pride, good memories… those sort of things. I suppose he’s got a point after all…</p>
<p>So, I guess it’s only natural that I finally decided to apply again since, even though both the company and me have evolved quite a bit during these years, the core foundations and principles it’s based upon remain the same, and I still very much align with them. But applying was only one part, so I couldn’t finish this blog post without stating how grateful I am for having been granted this second opportunity to join Igalia once again because, being honest, more often than less I was worried on whether I would be “good enough” for the Igalia of 2018. And the truth is that I won’t know for real until I actually start working and stay in the company for a while, but knowing that both my former colleagues and newer Igalians who joined since I left trust me enough to join is all I need for now, and I couldn’t be more excited nor happier about it.</p>
<p>Anyway, this post is already too long and I think I’ve covered everything I wanted to mention On Moving (pun intended with my post from 2012, thanks <a href="https://blogs.gnome.org/wjjt/">Will Thompson</a> for the idea!), so I think I’ll stop right here and re-focus on the latest bits related to the relocation before we effectively leave the UK for good, now that we finally left our rented house and put all our stuff in a removals van. After that, I expect a few days of crazy unpacking and bureaucracy to properly settle in Galicia and then hopefully a few weeks to rest and get our batteries recharged for our new adventure, starting soon in September (yet not too soon!).</p>
<p>As usual, we have no clue of how future will be, but we have a good feeling about this thing of moving back home in multiple ways, so I believe we’ll be fine as long as we stick together as a family as we always did so far.</p>
<p>But in any case, please wish us good luck.That’s always welcome! <img alt="&#x1F642;" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.3/72x72/1f642.png" style="height: 1em;"/></p></div>
    </content>
    <updated>2018-08-03T17:36:46Z</updated>
    <category term="Endless"/>
    <category term="General"/>
    <category term="Personal"/>
    <category term="Planet GNOME"/>
    <category term="Planet GPUL"/>
    <category term="Planeta GNOME Hispano"/>
    <author>
      <name>mario</name>
    </author>
    <source>
      <id>https://mariospr.org</id>
      <logo>https://i1.wp.com/mariospr.org/wp-content/uploads/2016/01/cropped-profile8.jpg?fit=32%2C32&amp;ssl=1</logo>
      <link href="https://mariospr.org/category/planet-gnome/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://mariospr.org" rel="alternate" type="text/html"/>
      <subtitle>Ramblings from the dark side of the moon</subtitle>
      <title>Planet GNOME – mariospr.org</title>
      <updated>2018-08-03T17:36:46Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:danigm.net,2018-08-03:mdl.html</id>
    <link href="http://danigm.net/mdl.html" rel="alternate" type="text/html"/>
    <title>mdl</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The last month I wrote a blog post about the <a href="http://danigm.net/lmdb.html">LMDB Cache database</a> and my
wish to use that in Fractal. To summarize, LMDB is a memory-mapped key-value
database that persist the data to the filesystem. I want to use this in the
Fractal desktop application to replace the current state storage system
(we're using simple json files) and as a side effect we can use this storage
system to share data between threads because currently we're using a big
struct <code>AppOp</code> shared with <code>Arc&lt;Mutex&lt;AppOp&gt;&gt;</code> and this cause some problems
because we need to share and lock and update the state there.</p>
<p>The main goal is to define an app data model with smaller structs and store
this using LMDB, then we can access to the same data querying the LMDB and we
can update the app state storing to the LMDB.</p>
<p>With this change we don't need to share these structs, we only need to query
to the LMDB to get the data and the work with that, and this should simplify
our code. The other main benefit will be that we'll have this state in the
filesystem by default so when we open the app after close, we'll stay in the
same state.</p>
<p>Take a look to the <a href="https://gitlab.gnome.org/danigm/mdl/blob/master/examples/gtkapp/src/main.rs">gtk TODO example app</a> to view how to use <em>mdl</em> with
signals in a real gtk app.</p>
<h2>What is mdl</h2>
<p><a href="https://crates.io/crates/mdl">mdl</a> is Data model library to share app state between threads and process
and persist the data in the filesystem. Implements a simple way to store
structs instances in a LMDB database and other methods like BTreeMap.</p>
<p>I started to play with the LMDB rust binding and writing some simple tests.
After some simple tests, I decided to write a simple abstraction to hide the
LMDB internals and to provide a simple data storage and to do that I created
the <strong>mdl</strong> crate.</p>
<p>The idea is to be able to define your app model as simple rust structs. LMDB is
a key-value database so every struct instance will have an unique <em>key</em> to
store in the cache.</p>
<p>The keys are stored in the cache ordered, so we can use some techniques to
store related objects and to retrieve all objects of a kind, we only need to
build keys correctly, following an scheme. For example, for fractal we can
store rooms, members and messages like this:</p>
<ul>
<li>rooms with key "room:roomid", to store all the room information, title,
   topic, icon, unread msgs, etc.</li>
<li>members with key "member:roomid:userid", to store all member information.</li>
<li>messages with key "msg:roomid:msgid" to store room messages.</li>
</ul>
<p>Following this key assignment we can iterate over all rooms by querying all
objects that starts with "room", we can get all members and all messages from
a room.</p>
<p>This have some inconveniences, because we can't query directly an message by
id if we don't know the roomid. If we need that kind of queries, we need to
think about another key assignment or maybe we should duplicate data. key-value
are simple databases so we don't have the power of relational databases.</p>
<h2>Internals</h2>
<p>LMDB is fast and efficient, because it's in memory so using this cache won't
add a lot of overhead, but to make it simple to use I've to add some overhead,
so mdl is easy by default and can be tuned to be really fast.</p>
<p>This crate has three main modules with traits to implement:</p>
<ul>
<li><strong>model</strong>: This contains the <code>Model</code> trait that should implement every
   struct that we want to make cacheable.</li>
<li><strong>store</strong>: This contains the <code>Store</code> trait that's implemented by all the
   cache systems.</li>
<li><strong>signal</strong>: This contains the <code>Signaler</code> trait and two structs that allow
   us to emit/subscribe to "key" signals.</li>
</ul>
<p>And two more modules that implements the current two cache systems:</p>
<ul>
<li><strong>cache</strong>: LMDB cache that implements the <code>Store</code> trait.</li>
<li><strong>bcache</strong>: BTreeMap cache that implements the <code>Store</code> trait. This is a good
   example of other cache system that can be used, this doesn't persist to the
   filesystem.</li>
</ul>
<p>So we've two main concepts here, the <strong>Store</strong> and the <strong>Model</strong>. The model
is the plain data and the store is the container of data. We'll be able to add
models to the store or to query the store to get stored models. We store our
models as key-value where the key is a <code>String</code> and the value is a <code>Vec&lt;u8&gt;</code>,
so every model should be serializable.</p>
<p>This serialization is the bigger overhead added. We need to do this because
we need to be able to store this in the LMDB database. Every request will create
a copy of the object in the database, so we're not using the same data. This can
be tuned to use pointers to the real data, but to do that we'll need to use
<em>unsafe</em> code and I think that the performance that we'll get with this doesn't
deserve the complexity that this will add.</p>
<p>By default, the <code>Model</code> trait has two methods <code>fromb</code> and <code>tob</code> to serialize
and deserialize using <a href="https://crates.io/crates/bincode">bincode</a>, so any struct that implements the <code>Model</code>
trait and doesn't reimplement these two methods should implement <code>Serialize</code>
and <code>Deserialize</code> from <a href="https://crates.io/crates/serde_derive">serde</a>.</p>
<p>The signal system is an addition to be able to register callbacks to <strong>keys</strong>
modifications in the <strong>store</strong>, so we can do something when a new objects is
added, modified or deleted from the store. The signaler is optional and we
should use it in a explicit way.</p>
<h2>How to use it</h2>
<p>First of all, you should define your data model, the struct that you want to
be able to store in the database:</p>
<div class="codehilite"><pre><span/><span class="cp">#[derive(Serialize, Deserialize, Debug)]</span><span class="w"/>
<span class="k">struct</span> <span class="nc">A</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="k">pub</span><span class="w"> </span><span class="n">p1</span>: <span class="nb">String</span><span class="p">,</span><span class="w"/>
<span class="w">    </span><span class="k">pub</span><span class="w"> </span><span class="n">p2</span>: <span class="kt">u32</span><span class="p">,</span><span class="w"/>
<span class="p">}</span><span class="w"/>
</pre></div>


<p>In this example we'll define a struct called <strong>A</strong> with two attributes, <strong>p1</strong>,
a <code>String</code>, and <strong>p2</strong>, an <code>u32</code>. We derive <code>Serialize</code> and <code>Deserialize</code>
because we're using the default <code>fromb</code> and <code>tob</code> from the <code>Model</code> trait.</p>
<p>Then we need to implement the <code>Model</code> trait:</p>
<div class="codehilite"><pre><span/><span class="k">impl</span><span class="w"> </span><span class="n">Model</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">A</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="k">fn</span> <span class="nf">key</span><span class="p">(</span><span class="o">&amp;</span><span class="bp">self</span><span class="p">)</span><span class="w"> </span>-&gt; <span class="nb">String</span> <span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="n">format</span><span class="o">!</span><span class="p">(</span><span class="s">"{}:{}"</span><span class="p">,</span><span class="w"> </span><span class="bp">self</span><span class="p">.</span><span class="n">p1</span><span class="p">,</span><span class="w"> </span><span class="bp">self</span><span class="p">.</span><span class="n">p2</span><span class="p">)</span><span class="w"/>
<span class="w">    </span><span class="p">}</span><span class="w"/>
<span class="p">}</span><span class="w"/>
</pre></div>


<p>We only reimplement the <code>key</code> method to build a key for every instance of <code>A</code>.
In this case our key will be the <code>String</code> followed by the number, so for example
if we've something like <code>let a = A { p1: "myk", p2: 42 };</code> the key will be
"myk:42".</p>
<p>Then, to use this we need to have a <code>Store</code>, in this example, we'll use the
LMDB store that's the struct <code>Cache</code>:</p>
<div class="codehilite"><pre><span/><span class="w">    </span><span class="c1">// initializing the cache. This str will be the fs persistence path</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">db</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">"/tmp/mydb.lmdb"</span><span class="p">;</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">cache</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Cache</span>::<span class="n">new</span><span class="p">(</span><span class="n">db</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
</pre></div>


<p>We pass the path to the filesystem where we want to persist the cache as the
first argument, in this example we'll persist to "/tmp/mydb.lmdb". When we
ran the program for the first time a directory will be created there. The next
time, that cache will be used with the information from the previous execution.</p>
<p>Then, with this <code>cache</code> object we can instantiate an <code>A</code> object and store
in the <code>cache</code>:</p>
<div class="codehilite"><pre><span/><span class="w">    </span><span class="c1">// create a new *object* and storing in the cache</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span><span class="p">{</span><span class="w"> </span><span class="n">p1</span>: <span class="s">"hello"</span><span class="p">.</span><span class="n">to_string</span><span class="p">(),</span><span class="w"> </span><span class="n">p2</span>: <span class="mi">42</span><span class="w"> </span><span class="p">};</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">r</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">store</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cache</span><span class="p">);</span><span class="w"/>
<span class="w">    </span><span class="n">assert</span><span class="o">!</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">is_ok</span><span class="p">());</span><span class="w"/>
</pre></div>


<p>The <code>store</code> method will serialize the object and store a copy of that in the
cache.</p>
<p>After the store, we can query for this object from other process, using the
same lmdb path, or from the same process using the cache:</p>
<div class="codehilite"><pre><span/><span class="w">    </span><span class="c1">// querying the cache by key and getting a new *instance*</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">a1</span>: <span class="nc">A</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span>::<span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cache</span><span class="p">,</span><span class="w"> </span><span class="s">"hello:42"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="n">assert_eq</span><span class="o">!</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">p1</span><span class="p">,</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">p1</span><span class="p">);</span><span class="w"/>
<span class="w">    </span><span class="n">assert_eq</span><span class="o">!</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">p2</span><span class="p">,</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">p2</span><span class="p">);</span><span class="w"/>
</pre></div>


<p>We'll get a copy of the original one.</p>
<p>This is the full example:</p>
<div class="codehilite"><pre><span/><span class="k">extern</span><span class="w"> </span><span class="k">crate</span><span class="w"> </span><span class="n">mdl</span><span class="p">;</span><span class="w"/>
<span class="cp">#[macro_use]</span><span class="w"/>
<span class="k">extern</span><span class="w"> </span><span class="k">crate</span><span class="w"> </span><span class="n">serde_derive</span><span class="p">;</span><span class="w"/>

<span class="k">use</span><span class="w"> </span><span class="n">mdl</span>::<span class="n">Cache</span><span class="p">;</span><span class="w"/>
<span class="k">use</span><span class="w"> </span><span class="n">mdl</span>::<span class="n">Model</span><span class="p">;</span><span class="w"/>
<span class="k">use</span><span class="w"> </span><span class="n">mdl</span>::<span class="n">Continue</span><span class="p">;</span><span class="w"/>

<span class="cp">#[derive(Serialize, Deserialize, Debug)]</span><span class="w"/>
<span class="k">struct</span> <span class="nc">A</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="k">pub</span><span class="w"> </span><span class="n">p1</span>: <span class="nb">String</span><span class="p">,</span><span class="w"/>
<span class="w">    </span><span class="k">pub</span><span class="w"> </span><span class="n">p2</span>: <span class="kt">u32</span><span class="p">,</span><span class="w"/>
<span class="p">}</span><span class="w"/>
<span class="k">impl</span><span class="w"> </span><span class="n">Model</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">A</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="k">fn</span> <span class="nf">key</span><span class="p">(</span><span class="o">&amp;</span><span class="bp">self</span><span class="p">)</span><span class="w"> </span>-&gt; <span class="nb">String</span> <span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="n">format</span><span class="o">!</span><span class="p">(</span><span class="s">"{}:{}"</span><span class="p">,</span><span class="w"> </span><span class="bp">self</span><span class="p">.</span><span class="n">p1</span><span class="p">,</span><span class="w"> </span><span class="bp">self</span><span class="p">.</span><span class="n">p2</span><span class="p">)</span><span class="w"/>
<span class="w">    </span><span class="p">}</span><span class="w"/>
<span class="p">}</span><span class="w"/>

<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="c1">// initializing the cache. This str will be the fs persistence path</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">db</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">"/tmp/mydb.lmdb"</span><span class="p">;</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">cache</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Cache</span>::<span class="n">new</span><span class="p">(</span><span class="n">db</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>

<span class="w">    </span><span class="c1">// create a new *object* and storing in the cache</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span><span class="p">{</span><span class="w"> </span><span class="n">p1</span>: <span class="s">"hello"</span><span class="p">.</span><span class="n">to_string</span><span class="p">(),</span><span class="w"> </span><span class="n">p2</span>: <span class="mi">42</span><span class="w"> </span><span class="p">};</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">r</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">store</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cache</span><span class="p">);</span><span class="w"/>
<span class="w">    </span><span class="n">assert</span><span class="o">!</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">is_ok</span><span class="p">());</span><span class="w"/>

<span class="w">    </span><span class="c1">// querying the cache by key and getting a new *instance*</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">a1</span>: <span class="nc">A</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span>::<span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cache</span><span class="p">,</span><span class="w"> </span><span class="s">"hello:42"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="n">assert_eq</span><span class="o">!</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">p1</span><span class="p">,</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">p1</span><span class="p">);</span><span class="w"/>
<span class="w">    </span><span class="n">assert_eq</span><span class="o">!</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">p2</span><span class="p">,</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">p2</span><span class="p">);</span><span class="w"/>
<span class="p">}</span><span class="w"/>
</pre></div>


<h3>Iterations</h3>
<p>When we store objects with the same key prefix we can iterate over all of
the objects, because we don't know the full key of all objects.</p>
<p>Currently there's two ways to iterate over all objects with the same prefix
in a <code>Store</code>:</p>
<ul>
<li><strong>all</strong></li>
</ul>
<p>This is the simpler way, calling the <code>all</code> method we'll receive a <code>Vec&lt;T&gt;</code> so
we've all the objects in a vector.</p>
<div class="codehilite"><pre><span/><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">hellows</span>: <span class="nb">Vec</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span>::<span class="n">all</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cache</span><span class="p">,</span><span class="w"> </span><span class="s">"hello"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="n">h</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">hellows</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="n">println</span><span class="o">!</span><span class="p">(</span><span class="s">"hellow: {}"</span><span class="p">,</span><span class="w"> </span><span class="n">h</span><span class="p">.</span><span class="n">p2</span><span class="p">);</span><span class="w"/>
<span class="w">    </span><span class="p">}</span><span class="w"/>
</pre></div>


<p>This has a little problem, because if we've a lot of objects, this will use a
lot of memory for the vector and we'll be iterating over all objects twice. To
solve this problems, the <code>iter</code> method was created.</p>
<ul>
<li><strong>iter</strong></li>
</ul>
<p>The <code>iter</code> method provides a way to call a closure for every object with this
prefix in the key. This closure should return a <code>Continue(bool)</code> that will
indicates if we should continue iterating of if we should stop the iteration
here.</p>
<div class="codehilite"><pre><span/><span class="w">    </span><span class="n">A</span>::<span class="n">iter</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cache</span><span class="p">,</span><span class="w"> </span><span class="s">"hello"</span><span class="p">,</span><span class="w"> </span><span class="o">|</span><span class="n">h</span><span class="o">|</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="n">println</span><span class="o">!</span><span class="p">(</span><span class="s">"hellow: {}"</span><span class="p">,</span><span class="w"> </span><span class="n">h</span><span class="p">.</span><span class="n">p2</span><span class="p">);</span><span class="w"/>
<span class="w">        </span><span class="n">Continue</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="w"/>
<span class="w">    </span><span class="p">}).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
</pre></div>


<p>Using the <code>Continue</code> we can avoid to iterate over all the objects, for example
if we're searching for one concrete object.</p>
<p>We're copying every object, but the <code>iter</code> method is better than the <code>all</code>,
because if we don't copy or move the object from the closure, this copy only
live in the closure scope, so we'll use less memory and also, we only iterate
one. If we use <code>all</code>, we'll iterate over all objects with that prefix to build
the vector so if we iterate over that vector another time this will cost more
than the <code>iter</code> version.</p>
<h2>Signal system</h2>
<p>As I said before, the signal system provide us a way to register callbacks
to key modifications. The signal system is independent of the <code>Model</code> and
<code>Store</code> and can be used independently:</p>
<div class="codehilite"><pre><span/><span class="k">extern</span><span class="w"> </span><span class="k">crate</span><span class="w"> </span><span class="n">mdl</span><span class="p">;</span><span class="w"/>

<span class="k">use</span><span class="w"> </span><span class="n">mdl</span>::<span class="n">Signaler</span><span class="p">;</span><span class="w"/>
<span class="k">use</span><span class="w"> </span><span class="n">mdl</span>::<span class="n">SignalerAsync</span><span class="p">;</span><span class="w"/>
<span class="k">use</span><span class="w"> </span><span class="n">mdl</span>::<span class="n">SigType</span><span class="p">;</span><span class="w"/>
<span class="k">use</span><span class="w"> </span><span class="n">std</span>::<span class="n">sync</span>::<span class="p">{</span><span class="n">Arc</span><span class="p">,</span><span class="w"> </span><span class="n">Mutex</span><span class="p">};</span><span class="w"/>
<span class="k">use</span><span class="w"> </span><span class="n">std</span>::<span class="p">{</span><span class="n">thread</span><span class="p">,</span><span class="w"> </span><span class="n">time</span><span class="p">};</span><span class="w"> </span>

<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">sig</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">SignalerAsync</span>::<span class="n">new</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="n">sig</span><span class="p">.</span><span class="n">signal_loop</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">counter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Arc</span>::<span class="n">new</span><span class="p">(</span><span class="n">Mutex</span>::<span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="w"/>

<span class="w">    </span><span class="c1">// one thread for receive signals</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">sig1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sig</span><span class="p">.</span><span class="n">clone</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">c1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">counter</span><span class="p">.</span><span class="n">clone</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">t1</span>: <span class="nc">thread</span>::<span class="n">JoinHandle</span><span class="o">&lt;</span><span class="n">_</span><span class="o">&gt;</span><span class="w"> </span><span class="o">=</span><span class="w"/>
<span class="w">    </span><span class="n">thread</span>::<span class="n">spawn</span><span class="p">(</span><span class="k">move</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="kd">let</span><span class="w"> </span><span class="n">_</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sig1</span><span class="p">.</span><span class="n">subscribe</span><span class="p">(</span><span class="s">"signal"</span><span class="p">,</span><span class="w"> </span><span class="nb">Box</span>::<span class="n">new</span><span class="p">(</span><span class="k">move</span><span class="w"> </span><span class="o">|</span><span class="n">_sig</span><span class="o">|</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">            </span><span class="o">*</span><span class="n">c1</span><span class="p">.</span><span class="n">lock</span><span class="p">().</span><span class="n">unwrap</span><span class="p">()</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span><span class="w"/>
<span class="w">        </span><span class="p">}));</span><span class="w"/>
<span class="w">    </span><span class="p">});</span><span class="w"/>

<span class="w">    </span><span class="c1">// waiting for threads to finish</span>
<span class="w">    </span><span class="n">t1</span><span class="p">.</span><span class="n">join</span><span class="p">().</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>

<span class="w">    </span><span class="c1">// one thread for emit signals</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">sig2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sig</span><span class="p">.</span><span class="n">clone</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">t2</span>: <span class="nc">thread</span>::<span class="n">JoinHandle</span><span class="o">&lt;</span><span class="n">_</span><span class="o">&gt;</span><span class="w"> </span><span class="o">=</span><span class="w"/>
<span class="w">    </span><span class="n">thread</span>::<span class="n">spawn</span><span class="p">(</span><span class="k">move</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="n">sig2</span><span class="p">.</span><span class="n">emit</span><span class="p">(</span><span class="n">SigType</span>::<span class="n">Update</span><span class="p">,</span><span class="w"> </span><span class="s">"signal"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">        </span><span class="n">sig2</span><span class="p">.</span><span class="n">emit</span><span class="p">(</span><span class="n">SigType</span>::<span class="n">Update</span><span class="p">,</span><span class="w"> </span><span class="s">"signal:2"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">        </span><span class="n">sig2</span><span class="p">.</span><span class="n">emit</span><span class="p">(</span><span class="n">SigType</span>::<span class="n">Update</span><span class="p">,</span><span class="w"> </span><span class="s">"signal:2:3"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="p">});</span><span class="w"/>

<span class="w">    </span><span class="c1">// waiting for threads to finish</span>
<span class="w">    </span><span class="n">t2</span><span class="p">.</span><span class="n">join</span><span class="p">().</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>

<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">ten_millis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">time</span>::<span class="n">Duration</span>::<span class="n">from_millis</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span><span class="w"/>
<span class="w">    </span><span class="n">thread</span>::<span class="n">sleep</span><span class="p">(</span><span class="n">ten_millis</span><span class="p">);</span><span class="w"/>

<span class="w">    </span><span class="n">assert_eq</span><span class="o">!</span><span class="p">(</span><span class="o">*</span><span class="n">counter</span><span class="p">.</span><span class="n">lock</span><span class="p">().</span><span class="n">unwrap</span><span class="p">(),</span><span class="w"> </span><span class="mi">3</span><span class="p">);</span><span class="w"/>
<span class="p">}</span><span class="w"/>
</pre></div>


<p>In this example we're creating a <code>SignalerAsync</code> that can <code>emit</code> signal and
we can <code>subscribe</code> a callback to any signal. The <code>sig.signal_loop();</code> init the
signal loop thread, that wait for signals and call any subscribed callback when
a signal comes.</p>
<div class="codehilite"><pre><span/><span class="w">        </span><span class="kd">let</span><span class="w"> </span><span class="n">_</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sig1</span><span class="p">.</span><span class="n">subscribe</span><span class="p">(</span><span class="s">"signal"</span><span class="p">,</span><span class="w"> </span><span class="nb">Box</span>::<span class="n">new</span><span class="p">(</span><span class="k">move</span><span class="w"> </span><span class="o">|</span><span class="n">_sig</span><span class="o">|</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">            </span><span class="o">*</span><span class="n">c1</span><span class="p">.</span><span class="n">lock</span><span class="p">().</span><span class="n">unwrap</span><span class="p">()</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span><span class="w"/>
<span class="w">        </span><span class="p">}));</span><span class="w"/>
</pre></div>


<p>We subscribe a callback to the signaler. The signaler can be cloned and the list
of callbacks will be the same, if you emit a signal in a clone and subscribe in
other clone, that signal will trigger the callback.</p>
<p>Then we're emiting some signals:</p>
<div class="codehilite"><pre><span/><span class="w">        </span><span class="n">sig2</span><span class="p">.</span><span class="n">emit</span><span class="p">(</span><span class="n">SigType</span>::<span class="n">Update</span><span class="p">,</span><span class="w"> </span><span class="s">"signal"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">        </span><span class="n">sig2</span><span class="p">.</span><span class="n">emit</span><span class="p">(</span><span class="n">SigType</span>::<span class="n">Update</span><span class="p">,</span><span class="w"> </span><span class="s">"signal:2"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
<span class="w">        </span><span class="n">sig2</span><span class="p">.</span><span class="n">emit</span><span class="p">(</span><span class="n">SigType</span>::<span class="n">Update</span><span class="p">,</span><span class="w"> </span><span class="s">"signal:2:3"</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w"/>
</pre></div>


<p>All of this three signals will trigger the previous callback because the
subscription works as a <em>signal starts with</em>. This allow us to subscribe to
all new room messages insertion if we follow the previous described keys,
subscribing to "msg:roomid" and if we only want to register a callback to
be called only when one message is updated we can subscribe to
"msg:roomid:msgid" and this callback won't be triggered for other messages.</p>
<p>The callback should be a <code>Box&lt;Fn(signal)&gt;</code> where signal is the following
struct:</p>
<div class="codehilite"><pre><span/><span class="cp">#[derive(Clone, Debug)]</span><span class="w"/>
<span class="k">pub</span><span class="w"> </span><span class="k">enum</span> <span class="nc">SigType</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="n">Update</span><span class="p">,</span><span class="w"/>
<span class="w">    </span><span class="n">Delete</span><span class="p">,</span><span class="w"/>
<span class="p">}</span><span class="w"/>

<span class="cp">#[derive(Clone, Debug)]</span><span class="w"/>
<span class="k">pub</span><span class="w"> </span><span class="k">struct</span> <span class="nc">Signal</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">    </span><span class="k">pub</span><span class="w"> </span><span class="n">type_</span>: <span class="nc">SigType</span><span class="p">,</span><span class="w"/>
<span class="w">    </span><span class="k">pub</span><span class="w"> </span><span class="n">name</span>: <span class="nb">String</span><span class="p">,</span><span class="w"/>
<span class="p">}</span><span class="w"/>
</pre></div>


<p>Currently only <code>Update</code> and <code>Delete</code> signal types are supported.</p>
<h3>Signaler in gtk main loop</h3>
<p>All the UI operations in a gtk app should be executed in the gtk main loop so
we can't use the <code>SignalerAsync</code> in a gtk app, because this signaler creates
one thread for the callbacks so all callbacks should implement the <code>Send</code> trait
and if we want to modify, for example, a <code>gtk::Label</code> in a callback, that
callback won't implement <code>Send</code> because <code>gtk::Label</code> can't be send between
threads safely.</p>
<p>To solve this problem, I've added the <code>SignalerSync</code>. That doesn't launch any
threads and where all operations runs in the same thread, even the callback.
This is a problem if one of your callbacks locks the thread, because this will
lock your interface in a gtk app, so any callback in the sync signaler should
be non blocking.</p>
<p>This signaler should be used in a different way, so we should call from time
to time to the <code>signal_loop_sync</code> method, that will check for new signals and
will trigger any subscribed callback. This signaler doesn't have a <code>signal_loop</code>
because we should do the loop in our thread.</p>
<p>This is an example of how to run the signaler loop inside a gtk app:</p>
<div class="codehilite"><pre><span/><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">sig</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">SignalerSync</span>::<span class="n">new</span><span class="p">();</span><span class="w"/>

<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">sig1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sig</span><span class="p">.</span><span class="n">clone</span><span class="p">();</span><span class="w"/>
<span class="w">    </span><span class="n">gtk</span>::<span class="n">timeout_add</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="k">move</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="p">{</span><span class="w"/>
<span class="w">        </span><span class="n">gtk</span>::<span class="n">Continue</span><span class="p">(</span><span class="n">sig1</span><span class="p">.</span><span class="n">signal_loop_sync</span><span class="p">())</span><span class="w"/>
<span class="w">    </span><span class="p">});</span><span class="w"/>

<span class="w">    </span><span class="c1">// We can subscribe callbacks using the sig here</span>
</pre></div>


<p>In this example code we're registering a timeout callback, every 50ms this
closure will be called, from the gtk main thread, and the <code>signal_loop_sync</code>
will check for signals and call the needed callbacks.</p>
<p>This method returns a <code>bool</code> that's false when the signaler stops. You can
stop the signaler calling the <code>stop</code> method.</p>
<h2>Point of extension</h2>
<p>I've tried to make this crate generic to be able to extend in the future and
provide other kind of cache that can be used changing little code in the apps
that uses <strong>mdl</strong>.</p>
<p>This is the main reason to use traits to implement the store, so the first point
of extension is to add more cache systems, we're currently two, the LMDB and
the BTreeMap, but it would be easy to add more key-value storages, like
memcached, <a href="https://crates.io/crates/unqlite">unqlie</a>, mongodb, redis, couchdb, etc.</p>
<p>The signaler is really simple, so maybe we can start to think about new
signalers that uses <code>Futures</code> and other kind of callbacks registration.</p>
<p>As I said before, mdl does a copy of the data on every write and on every read,
so it could be cool to explore the implication of these copies in the
performance and try to find methods to reduce this overhead.</p></div>
    </summary>
    <updated>2018-08-03T11:22:56Z</updated>
    <category term="gnome"/>
    <category term="rust"/>
    <category term="mdl"/>
    <category term="fractal"/>
    <author>
      <name>danigm</name>
    </author>
    <source>
      <id>http://danigm.net/</id>
      <link href="http://danigm.net/" rel="alternate" type="text/html"/>
      <link href="http://danigm.net/feeds/tags/gnome.rss.xml" rel="self" type="application/rss+xml"/>
      <title>danigm.net</title>
      <updated>2018-08-03T11:22:56Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-gb">
    <id>https://www.nedrichards.com/2018/08/pinpoint-flatpak/</id>
    <link href="https://www.nedrichards.com/2018/08/pinpoint-flatpak/" rel="alternate" type="text/html"/>
    <title>Pinpoint Flatpak</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A while back I made a <a href="https://www.nedrichards.com/2014/06/pinpoint-copr-repo/">Pinpoint COPR repo</a> in order to get access to this marvelous tool in Fedora.
Well, now I work for <a href="https://endlessos.com">Endless</a> and the only way you can run apps on our system is in a <a href="https://flatpak.org">Flatpak</a> container.
So I whipped up a quick <a href="https://github.com/nedrichards/pinpoint-flatpak">Pinpoint Flatpak</a> in order to give a talk at <a href="http://2018.guadec.org/">GUADEC</a> this year.</p>

<p>Flatpak is actually very helpful here, since the libraries required are rapidly becoming antique, and carrying them around on your base system is gross as well as somewhat insecure.
There isn’t a GUI to create or open files, and it’s somewhat awkward to use if you’re not already an expert, so I didn’t submit the app to Flathub, however you can easily download and install the bundle locally. I hope the two people for whom this is useful find it as useful as I did to make.</p></div>
    </summary>
    <updated>2018-08-03T09:53:35Z</updated>
    <source>
      <id>https://www.nedrichards.com/categories/gnome/</id>
      <author>
        <name>Nick Richards</name>
      </author>
      <link href="https://www.nedrichards.com/categories/gnome/" rel="alternate" type="text/html"/>
      <link href="https://www.nedrichards.com/categories/gnome/index.xml" rel="self" type="application/rss+xml"/>
      <subtitle>Recent content in Gnome on Nick Richards</subtitle>
      <title>Gnome on Nick Richards</title>
      <updated>2018-08-05T17:53:56Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-gb">
    <id>https://www.nedrichards.com/2014/06/pinpoint-copr-repo/</id>
    <link href="https://www.nedrichards.com/2014/06/pinpoint-copr-repo/" rel="alternate" type="text/html"/>
    <title>Pinpoint COPR Repo</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A few years ago I worked with a number of my former colleagues to create <a href="https://wiki.gnome.org/action/show/Apps/Pinpoint">Pinpoint</a>, a quick hack that made it easier for us to give presentations that didn’t suck. Now that I’m at <a href="https://www.collabora.com/">Collabora</a> I have a couple of presentations to make and using pinpoint was a natural choice. I’ve been updating our internal templates to use our shiny new brand and wanted to use some newer features that weren’t available in Fedora’s version of pinpoint.</p>

<p>There hasn’t been an official release for a little while and a few useful patches have built up on the master branch. I’ve packaged a git snapshot and created a <a href="https://copr.fedoraproject.org/coprs/nedrichards/Pinpoint/">COPR repo for Fedora</a> so you can use these snapshots yourself. They’re good.</p></div>
    </summary>
    <updated>2018-08-03T09:53:35Z</updated>
    <source>
      <id>https://www.nedrichards.com/categories/gnome/</id>
      <author>
        <name>Nick Richards</name>
      </author>
      <link href="https://www.nedrichards.com/categories/gnome/" rel="alternate" type="text/html"/>
      <link href="https://www.nedrichards.com/categories/gnome/index.xml" rel="self" type="application/rss+xml"/>
      <subtitle>Recent content in Gnome on Nick Richards</subtitle>
      <title>Gnome on Nick Richards</title>
      <updated>2018-08-05T17:53:56Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://mjg59.dreamwidth.org/50924.html</id>
    <link href="https://mjg59.dreamwidth.org/50924.html" rel="alternate" type="text/html"/>
    <title>Porting Coreboot to the 51NB X210</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The X210 is a strange machine. A set of Chinese enthusiasts developed a <a href="http://51nb.com/mb">series of motherboards</a> that slot into old Thinkpad chassis, providing significantly more up to date hardware. The X210 has a Kabylake CPU, supports up to 32GB of RAM, has an NVMe-capable M.2 slot and has eDP support - and it fits into an X200 or X201 chassis, which means it also comes with a classic Thinkpad keyboard . We ordered some from a <a href="https://facebook.com/lcdfans">Facebook page</a> (a process that involved wiring a large chunk of money to a Chinese bank which wasn't at all stressful), and a couple of weeks later <a href="https://twitter.com/isislovecruft/status/1019773411688570881">they arrived</a>. Once I'd put mine together I had a quad-core i7-8550U with 16GB of RAM, a 512GB NVMe drive and a 1920x1200 display. I'd transplanted over the drive from my XPS13, so I was running stock Fedora for most of this development process.<br/><br/>The other fun thing about it is that none of the firmware flashing protection is enabled, including <a href="https://github.com/corna/me_cleaner/wiki/Intel-Boot-Guard&amp;quot">Intel Boot Guard</a>. This means running a custom firmware image is possible, and what would a ridiculous custom Thinkpad be without ridiculous custom firmware? A shadow of its potential, that's what. So, I read the Coreboot[1] <a href="https://www.coreboot.org/Motherboard_Porting_Guide">motherboard porting guide</a> and set to.<br/><br/>My life was made a great deal easier by the existence of a port for the Purism Librem 13v2. This is a Skylake system, and Skylake and Kabylake are very similar platforms. So, the first job was to just copy that into a new directory and start from there. The first step was to update the Inteltool utility so it understood the chipset - <a href="https://github.com/mjg59/coreboot/commit/16a068ba288740ce20c5af2adbee6924278df9ad">this commit</a> shows what was necessary there. It's mostly just adding new PCI IDs, but it also needed some adjustment to account for the GPIO allocation being different on mobile parts when compared to desktop ones. One thing that bit me - Inteltool relies on being able to mmap() arbitrary bits of physical address space, and the kernel doesn't allow that if CONFIG_STRICT_DEVMEM is enabled. I had to disable that first.<br/><br/>The GPIO pins got dropped into <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/gpio.h">gpio.h</a>. I ended up just pushing the raw values into there rather than parsing them back into more semantically meaningful definitions, partly because I don't understand what these things do that well and largely because I'm lazy. Once that was done, on to the next step.<br/><br/><a href="https://en.wikipedia.org/wiki/Intel_High_Definition_Audio">High Definition Audio</a> devices (or HDA) have a standard interface, but the codecs attached to the HDA device vary - both in terms of their own configuration, and in terms of dealing with how the board designer may have laid things out. Thankfully the existing configuration could be copied from <tt>/sys/class/sound/card0/hwC0D0/init_pin_configs</tt>[2] and then <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/hda_verb.h">hda_verb.h</a> could be updated.<br/><br/>One more piece of hardware-specific configuration is the Video BIOS Table, or VBT. This contains information used by the graphics drivers (firmware or OS-level) to configure the display correctly, and again is somewhat system-specific. This can be grabbed from <tt>/sys/kernel/debug/dri/0/i915_vbt</tt>.<br/><br/>A lot of the remaining platform-specific configuration has been split out into board-specific config files. and <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/devicetree.cb">this</a> also needed updating. Most stuff was the same, but I confirmed the GPE and genx_dec register values by using Inteltool to dump them from the vendor system and copy them over. <tt>lspci -t</tt> gave me the bus topology and told me which PCIe root ports were in use, and <tt>lsusb -t</tt> gave me port numbers for USB. That let me update the root port and USB tables.<br/><br/>The final code update required was to tell the OS how to communicate with the embedded controller. Various ACPI functions are actually handled by this autonomous device, but it's still necessary for the OS to know how to obtain information from it. This involves writing some <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/acpi/ec.asl">ACPI code</a>, but that's largely a matter of cutting and pasting from the vendor firmware - the EC layout depends on the EC firmware rather than the system firmware, and we weren't planning on changing the EC firmware in any way. Using ifdtool told me that the vendor firmware image wasn't using the EC region of the flash, so my assumption was that the EC had its own firmware stored somewhere else. I was ready to flash.<br/><br/>The first attempt involved <a href="https://www.patternsinthevoid.net/">isis'</a> machine, using their <a href="https://beagleboard.org/black">Beaglebone Black</a> as a flashing device - the lack of protection in the firmware meant we ought to be able to get away with using flashrom directly on the host SPI controller, but using an external flasher meant we stood a better chance of being able to recover if something went wrong. We flashed, plugged in the power and… nothing. Literally. The power LED didn't turn on. The machine was very, very dead.<br/><br/>Things like managing battery charging and status indicators are up to the EC, and the complete absence of anything going on here meant that the EC wasn't running. The most likely reason for that was that the system flash <em>did</em> contain the EC's firmware even though the descriptor said it didn't, and now the system was very unhappy. Worse, the flash wouldn't speak to us any more - the power supply from the Beaglebone to the flash chip was sufficient to power up the EC, and the EC was then holding onto the SPI bus desperately trying to read its firmware. Bother. This was made rather more embarrassing because isis had explicitly raised concern about flashing an image that didn't contain any EC firmware, and now I'd <a href="https://twitter.com/isislovecruft/status/1023291192098750464">killed their laptop</a>.<br/><br/>After some digging I was able to find EC firmware for a related 51NB system, and looking at that gave me a bunch of strings that seemed reasonably identifiable. Looking at the original vendor ROM showed very similar code located at offset 0x00200000 into the image, so I added a <a href="https://github.com/mjg59/coreboot/tree/x210_blog/util/51nb">small tool</a> to inject the EC firmware (basing it on an <a href="https://github.com/mjg59/coreboot/tree/x210_blog/util/kbc1126">existing tool</a> that does something similar for the EC in some HP laptops). I now had an image that I was reasonably confident would get further, but we couldn't flash it. Next step seemed like it was going to involve desoldering the flash from the board, which is a colossal pain. Time to sleep on the problem.<br/><br/>The next morning we were able to <a href="https://twitter.com/PaulM/status/1023335124765683712">borrow</a> a <a href="https://www.dediprog.com/product/SF600">Dediprog</a> SPI flasher. These are <em>much</em> faster than doing SPI over GPIO lines, and also support running the flash at different voltage. At 3.5V the behaviour was the same as we'd seen the previous night - nothing. According to the <a href="https://www.netcheif.com/Reviews/DIR-825AC/PDF/MX25L6406E.pdf">datasheet</a>, the flash required at least 2.7V to run, but flashrom listed 1.8V as the next lower voltage so we tried. And, amazingly, it worked - not reliably, but sufficiently. Our hypothesis is that the chip is marginally able to run at that voltage, but that the EC isn't - we were no longer powering the EC up, so could communicated with the flash. After a couple of attempts we were able to write enough that we had EC firmware on there, at which point we could shift back to flashing at 3.5V because the EC was leaving the flash alone.<br/><br/>So, we flashed again. And, amazingly, we ended up <a href="https://twitter.com/isislovecruft/status/1023369986121719808">staring at a UEFI shell prompt</a>[3]. USB wasn't working, and nor was the onboard keyboard, but we had graphics and were executing actual firmware code. I was able to get USB working fairly quickly - it turns out that Linux numbers USB ports from 1 and the FSP numbers them from 0, and fixing that up gave us working USB. We were able to boot Linux! Except there were a whole bunch of errors complaining about EC timeouts, and also we only had half the RAM we should.<br/><br/>After some discussion on the Coreboot IRC channel, we figured out the RAM issue - the Librem13 only has one DIMM slot. The FSP expects to be given a set of i2c addresses to probe, one for each DIMM socket. It is then able to read back the DIMM configuration and configure the memory controller appropriately. Running i2cdetect against the system SMBus gave us a range of devices, including one at 0x50 and one at 0x52. The detected DIMM was at 0x50, which made 0x52 seem like a reasonable bet - and grepping the tree showed that several other systems used 0x52 as the address for their second socket. Adding that to <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/romstage.c#L31">the list of addresses</a> and <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/romstage.c#L48">passing it to the FSP</a> gave us all our RAM.<br/><br/>So, now we just had to deal with the EC. One thing we noticed was that if we flashed the vendor firmware, ran it, flashed Coreboot and then rebooted without cutting the power, the EC worked. This strongly suggested that there was some setup code happening in the vendor firmware that configured the EC appropriately, and if we duplicated that it would probably work. Unfortunately, figuring out what that code was was difficult. I ended up dumping the PCI device configuration for the vendor firmware and for Coreboot in case that would give us any clues, but the only thing that seemed relevant at all was that the <a href="https://en.wikipedia.org/wiki/Low_Pin_Count">LPC controller</a> was configured to pass io ports 0x4e and 0x4f to the LPC bus with the vendor firmware, but not with Coreboot. Unfortunately the EC was supposed to be listening on 0x62 and 0x66, so this wasn't the problem.<br/><br/>I ended up solving this by using <a href="https://github.com/LongSoft/UEFITool">UEFITool</a> to extract all the code from the vendor firmware, and then disassembled every object and grepped them for port io. x86 systems have two separate io buses - memory and <a href="https://wiki.osdev.org/Port_IO">port IO</a>. Port IO is well suited to simple devices that don't need a lot of bandwidth, and the EC is definitely one of these - there's no way to talk to it other than using port IO, so any configuration was almost certainly happening that way. I found a whole bunch of stuff that touched the EC, but was clearly depending on it already having been enabled. I found a wide range of cases where port IO was being used for early PCI configuration. And, finally, I found some code that reconfigured the LPC bridge to route 0x4e and 0x4f to the LPC bus (explaining the configuration change I'd seen earlier), and then wrote a bunch of values to those addresses. I mimicked those, and suddenly the EC started responding.<br/><br/>It turns out that the writes that made this work weren't terribly magic. PCs used to have a SuperIO chip that provided most of the legacy port functionality, including the floppy drive controller and parallel and serial ports. Individual components (called <a href="https://www.coreboot.org/Developer_Manual/Super_IO#Logical_Devices_.28LDN.29">logical devices</a>, or LDNs) could be enabled and disabled using a sequence of writes that was fairly consistent between vendors. Someone on the Coreboot IRC channel recognised that the writes that enabled the EC were simply using that protocol to enable a series of LDNs, which apparently correspond to things like "Working EC" and "Working keyboard". And with <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/ec/51nb/early_init.c">that</a>, we were done.<br/><br/><del>Coreboot doesn't currently have ACPI support for the latest Intel graphics chipsets, so right now my image doesn't have working backlight control</del>.Backlight control also turned out to be interesting. Most modern Intel systems handle the backlight via registers in the GPU, but the X210 uses the embedded controller (possibly because it supports both LVDS and eDP panels). This means that adding a <a href="https://github.com/mjg59/coreboot/blob/x210_blog/src/mainboard/51nb/x210/acpi/graphics.asl">simple display stub</a> is sufficient - all we have to do on a backlight set request is store the value in the EC, and it does the rest.<br/><br/>Other than that, everything seems to work (although there's probably a bunch of power management optimisation to do). I started this process knowing almost nothing about Coreboot, but thanks to the help of people on IRC I was able to get things working in about two days of work[4] and now have firmware that's about as custom as my laptop.<br/><br/>[1] Why not Libreboot? Because modern Intel SoCs haven't had their memory initialisation code reverse engineered, so the only way to boot them is to use the proprietary Intel <a href="https://github.com/IntelFsp/FSP">Firmware Support Package</a>.<br/>[2] Card 0, device 0<br/>[3] After a few false starts - it turns out that the initial memory training can take a surprisingly long time, and we kept giving up before that had happened<br/>[4] Spread over 5 or so days of real time<br/><br/><img alt="comment count unavailable" height="12" src="https://www.dreamwidth.org/tools/commentcount?user=mjg59&amp;ditemid=50924" style="vertical-align: middle;" width="30"/> comments</div>
    </summary>
    <updated>2018-08-03T01:35:40Z</updated>
    <category term="fedora"/>
    <source>
      <id>https://mjg59.dreamwidth.org/</id>
      <author>
        <name>Matthew Garrett</name>
      </author>
      <link href="https://mjg59.dreamwidth.org/" rel="alternate" type="text/html"/>
      <link href="http://www.dreamwidth.org/users/mjg59/data/rss/" rel="self" type="application/rss+xml"/>
      <subtitle>Matthew Garrett - Dreamwidth Studios</subtitle>
      <title>Matthew Garrett</title>
      <updated>2018-08-03T01:35:40Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/mclasen/?p=2309</id>
    <link href="https://blogs.gnome.org/mclasen/2018/08/02/on-flatpak-updates/" rel="alternate" type="text/html"/>
    <link href="https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-124710-PM.webm" length="0" rel="enclosure" type="video/webm"/>
    <link href="https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-125142-PM.webm" length="0" rel="enclosure" type="video/webm"/>
    <title>On Flatpak updates</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Maybe you remember times when updating your system was risky business – your web browser might crash of start to behave funny because the update pulled data files or fonts out from underneath the running process, leading to fireworks or, more likely, crashes. Flatpak updates on the other hand are 100% safe. You can call … <a class="more-link" href="https://blogs.gnome.org/mclasen/2018/08/02/on-flatpak-updates/">Continue reading <span class="screen-reader-text">On Flatpak updates</span> <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Maybe you remember times when updating your system was risky business – your web browser might crash of start to behave funny because the update pulled data files or fonts out from underneath the running process, leading to fireworks or, more likely, crashes.</p>
<p><a href="https://blogs.gnome.org/mclasen/files/2018/08/photo_2018-08-02_12-05-41.jpg"><img alt="" class="aligncenter size-medium wp-image-2310" height="300" src="https://blogs.gnome.org/mclasen/files/2018/08/photo_2018-08-02_12-05-41-300x300.jpg" width="300"/></a>Flatpak updates on the other hand are 100% safe. You can call</p>
<pre> flatpak update</pre>
<p>and the running instances of are not affected in any way. Flatpak keeps existing deployments around until the last user is gone.  If you quit the application and restart it, you will get the updated version, though.</p>
<p>This is very nice, and works just fine. But maybe we can do even better?</p>
<h3>Improving the system</h3>
<p>It would be great if the system was aware of the running instances, and offered me to restart them to take advantage of the new version that is now available. There is a good chance that GNOME Software will gain this feature before too long.</p>
<p>But for now, it does not have it.</p>
<h3>Do it yourself</h3>
<p>Many apps, in particular those that are not native to the Linux distro world, expect to update themselves, and we have had requests to enable this functionality in flatpak. We do think that updating software is a system responsibility that should be controlled by global policies and be under the users control, so we haven’t quite followed the request.</p>
<p>But Flatpak 1.0 does have an API that is useful in this context, the “<a href="https://flatpak.github.io/xdg-desktop-portal/portal-docs.html#gdbus-org.freedesktop.portal.Flatpak">Flatpak portal</a>“. It has a Spawn method that allows applications to launch a process in a new sandbox.</p>
<pre class="programlisting">Spawn (IN  ay    cwd_path,
       IN  aay   argv,
       IN  a{uh} fds,
       IN  a{ss} envs,
       IN  u     flags,
       IN  a{sv} options,
       OUT u     pid)</pre>
<p>There are several use cases for this, from sandboxing thumbnailers (which create thumbnails for possibly untrusted content files) to sandboxing web browser tabs individually. The use case we are interested in here is restarting the latest version of the app itself.</p>
<p>One complication that I’ve run into when trying this out is the “unique application” pattern that is built into GApplication and similar application classes: Since there is already an owner for the application ID on the session bus, my newly spawned version will just back off and exit. Which is clearly not what I intended in this case.</p>
<h3>Make it stop</h3>
<p>The workaround I came up with is not very pretty, but functional. It requires several parts.</p>
<p>First, I need a “quit” action exported on the session bus. The newly spawned version will activate this action of the running instance to convince it to go away. Thankfully, my example app already had this action, for the Quit item in the app menu.</p>
<p>I don’t want this to happen unconditionally, but only if I am spawning a new version. To achieve this, I made my app only activate “quit” if the –replace option is present, and add that option to the commandline that I pass to the “Spawn” call.</p>
<p>The code for this part is less pretty than it could be, since GApplication gets in the way a bit. I have to manually check for the –replace option and do the “quit” D-Bus call by hand.</p>
<p>Doing the “quit” call synchronously is not quite enough to avoid a race condition between the running instance dropping the bus name and my new instance attempting to take it. Therefore, I explicitly wait for the bus name to become unowned before entering g_application_run().</p>
<div class="wp-video" style="width: 474px;">
<video class="wp-video-shortcode" controls="controls" height="267" id="video-2309-1" preload="metadata" width="474"><source src="https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-124710-PM.webm?_=1" type="video/webm"/><a href="https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-124710-PM.webm">https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-124710-PM.webm</a></video></div>
<p>But it all works fine. To test it, i exported a “restart” action and added it to the app menu.</p>
<h3>Tell me about it</h3>
<p>But who can remember to open the app menu and click “Restart”. That is just too cumbersome. Thankfully, flatpak has a solution for this: When you update an app that is running, it creates a marker file named</p>
<pre>/app/.updated</pre>
<p>inside the sandbox for each running instance.</p>
<p>That makes it very easy for the app to find out when it has been updated, by just monitoring this file. Once the file appears, it can pop up a dialog that offers the user to restart the newer version of the app. A good quality implementation of this will of course save and restore the state when doing this.</p>
<div class="wp-video" style="width: 474px;"><video class="wp-video-shortcode" controls="controls" height="267" id="video-2309-2" preload="metadata" width="474"><source src="https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-125142-PM.webm?_=2" type="video/webm"/><a href="https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-125142-PM.webm">https://blogs.gnome.org/mclasen/files/2018/08/Screencast-from-08-02-2018-125142-PM.webm</a></video></div>
<p>Voilá, updates made easy!</p>
<p>You can find the working example in the <a href="https://github.com/matthiasclasen/portal-test/commits/master">portal-test</a> repository.</p></div>
    </content>
    <updated>2018-08-02T17:21:33Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>mclasen</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/mclasen</id>
      <link href="https://blogs.gnome.org/mclasen/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/mclasen" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Goings on</title>
      <updated>2018-08-04T03:21:39Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://eishagsoc.wordpress.com/?p=103</id>
    <link href="https://eishagsoc.wordpress.com/2018/08/01/improve-the-styling-of-quotes-in-fractal/" rel="alternate" type="text/html"/>
    <title>Improve the styling of quotes in Fractal</title>
    <summary>Fractal is a Matrix client for GNOME and is written in Rust. Matrix is an open network for secure, decentralized communication. These past weeks, I’ve been working on an implementation of a context menu for the messages and on the improvement of the styling for the quotes in the messages. I will talk about the […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://gitlab.gnome.org/World/fractal/" rel="noopener" target="_blank">Fractal</a> is a <a href="https://matrix.org/blog/home/" rel="noopener" target="_blank">Matrix</a> client for GNOME and is written in Rust. Matrix is an open network for secure, decentralized communication.</p>
<p>These past weeks, I’ve been working on an implementation of a context menu for the messages and on the improvement of the styling for the quotes in the messages. I will talk about the context menu in an other article later. So I’m going to talk about the new styling of the quotes.</p>
<p>You can have a look at the issue <a href="https://gitlab.gnome.org/World/fractal/issues/192" rel="noopener" target="_blank">here</a>. The idea was to add a visual distinction between the quotes and regular text in messages: the text of a quote would be dimmed, with a 2px left blue border and a 6px left padding; there would be also a 6px vertical space separating the quotes and the rest of the text.</p>
<h3>Apply the new styling to the quotes</h3>
<p>Quotes are simply lines of a message which start with a “&gt;”. The text of the message is placed in a “message body” that is a <code>GtkBox</code>, the content of the message is simply placed into a <code>GtkLabel</code> within this <code>GtkBox</code>. In order to apply the new styling, we would divide the messages contents in several <code>GtkLabel</code>s and the <code>GtkLabel</code>s containing quotes would have a CSS class applied to them (more details in <a href="https://gitlab.gnome.org/World/fractal/commit/745831a86eed052bec923067001ed37867f06e5a" rel="noopener" target="_blank">this commit</a>). This CSS class would make these <code>GtkLabel</code>s have a dimmed text, with a 2px left blue border and a 6px left padding (more details <a href="https://gitlab.gnome.org/World/fractal/commit/763ea03de8fa99a725e16b26a686c91a1eba7b22" rel="noopener" target="_blank">here</a>).</p>
<h3>Get a consistent spacing between the different <code>GtkLabel</code>s</h3>
<p>There was a problem: we want to always have the same spacing between quotes and the rest of the text but what would happen if we have our default 6px spacing plus one (or several) new line that would be between a quote and the rest of the text? The best solution was to delete every blank lines before and after each parts of a message. I’ve used regular expressions in order to be able to delete the leading blank lines without doing so with the leading spaces of the first non-blank line, more details <a href="https://gitlab.gnome.org/World/fractal/commit/0d90afbd4b334eb1da93bf1c8783b653520b2dde" rel="noopener" target="_blank">here</a> and <a href="https://gitlab.gnome.org/World/fractal/commit/febfd640013db7c0bb8e9fdb0a0abd6015eee609" rel="noopener" target="_blank">here</a>.</p>
<h3>The result</h3>
<p><img alt="Capture du 2018-08-01 19-08-53.png" class="alignnone size-full wp-image-106" src="https://eishagsoc.files.wordpress.com/2018/08/capture-du-2018-08-01-19-08-53.png?w=756"/></p>
<p>This is what you have in the message input.</p>
<p><img alt="Capture du 2018-08-01 19-09-36.png" class="alignnone size-full wp-image-107" src="https://eishagsoc.files.wordpress.com/2018/08/capture-du-2018-08-01-19-09-36.png?w=756"/></p>
<p>This is what is looks like after it is sent.</p></div>
    </content>
    <updated>2018-08-01T21:23:00Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>Eisha CHEN-YEN-SU</name>
    </author>
    <source>
      <id>https://eishagsoc.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://eishagsoc.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://eishagsoc.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://eishagsoc.wordpress.com/osd.xml" rel="search" title="GSoC 2018 with GNOME" type="application/opensearchdescription+xml"/>
      <link href="https://eishagsoc.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>GSoC 2018 with GNOME</title>
      <updated>2018-08-05T17:54:01Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://cfoch.github.io/tech/2018/08/01/how-i-built-pipewire-from-source.html</id>
    <link href="https://cfoch.github.io/tech/2018/08/01/how-i-built-pipewire-from-source.html" rel="alternate" type="text/html"/>
    <title>How I built pipewire from source code in Linux with systemd</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Lately, I have been interested in contributing to
<a href="https://pipewire.org/">Pipewire</a>. One interesting thing about it is that it
allows you to use the same video device (for example your webcam) in
different applications at the same time.</p>

<p>If you have a webcam, try for example in your terminal:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gst-launch-1.0 v4l2src ! xvimagesink
</code></pre></div></div>
<p>It just will open a window with the capture of your webcam… don’t close it yet!
If in other terminal, you run <code class="highlighter-rouge">gst-launch-1.0 v4l2src ! xvimagesink</code> again,
you will get the following error:</p>

<p><img alt="Device busy" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/v4l2src-device-busy.png"/></p>

<p>and you realize that your webcam can only be used by one application at the same
time, at least until you keep reading the rest of this post.</p>

<p>As I said, I was interested in contributing to pipewire, so you will see how to
build it form source code. But if you just want to use the one that is already
provided by your distro repositories, just go to the final part.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ~
git clone https://github.com/PipeWire/pipewire
cd pipewire
</code></pre></div></div>

<p>Then you can build pipewire, but before that, for the time I am trying it
(2018-08-01), I had the problem that pipewire wanted to override my local
pipewire installation (the one that I have already installed from the official
packages of Fedora) even when I set a prefix.</p>

<p><img alt="systemd unit directory error because of missing permissions" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/systemduserunitdir-error.png"/></p>

<p>This error, as you may say, is because my user does not have permissions to
write into <code class="highlighter-rouge">/usr/lib/systemd/user</code>. That’s fine. Actually, I am not sure how bad
or good would be to override my system wide pipewire installation. Luckyly, a
guy from the #pipewire channel with the nickname <em>jadahl</em> had a
<a href="https://cfoch.github.io/assets/posts/2018-08-01-how-i-built-pipewire-from-source/patch/systemduserunitdir.diff">patch</a>.</p>

<p>So if you have the same problem, use that patch. To use it just do,</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout -b systemduserunitdir
curl -O http://cfoch.github.io/assets/posts/2018-08-01-how-i-built-pipewire-from-source/patch/systemduserunitdir.diff
git apply systemduserunitdir.diff
</code></pre></div></div>

<p>Now we will build pipewire from source…
but before, I some folders a directory where pipewire files will be installed to:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir -p ~/env/pipewire
</code></pre></div></div>

<p>and also I create the following directory because the <code class="highlighter-rouge">.socket</code> and <code class="highlighter-rouge">.service</code>
unit files should be installed there instead of <code class="highlighter-rouge">/usr/lib/systemd/user</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir ~/.local/share/systemd/user
</code></pre></div></div>

<p>Now, to build pipewire:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir builddir
cd builddir
meson --prefix=$HOME/env/pipewire ..
meson configure -Dsystemd_user_unit_dir=$HOME/.local/share/systemd/user
ninja
ninja install
</code></pre></div></div>

<p>If you had all the required dependencies, you will have pipewire installed now.
In your <code class="highlighter-rouge">~/.bashrc</code> file, you may want to add the following lines:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export PIPEWIRE_PREFIX=$HOME/env/pipewire
export PREFIX_PATH=$PIPEWIRE_PREFIX/bin:$PATH
export LD_LIBRARY_PATH=$PIPEWIRE_PREFIX/lib64:$LD_LIBRARY_PATH
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$PIPEWIRE_PREFIX/lib64/pkgconfig
export GST_PLUGIN_PATH_1_0=$PIPEWIRE_PREFIX/lib64/gstreamer-1.0/:$GST_PLUGIN_PATH_1_0
</code></pre></div></div>

<p>In my case, I didn’t add these lines to my <code class="highlighter-rouge">.bashrc</code>, because I have a script
called <code class="highlighter-rouge">env.sh</code> in <code class="highlighter-rouge">~/env/pipewire/env.sh</code>, so whenever I want to build an
application that uses pipewire from master I just run <code class="highlighter-rouge">source ~/env/pipewire/env.sh</code>
to enter in my environment. You can download my script from
<a href="https://cfoch.github.io/assets/posts/2018-08-01-how-i-built-pipewire-from-source/script/env.sh">here</a>
but I warn that it may contain things that you don’t need!</p>

<p>Now, you have pipewire installed from master. You have to start the daemon, but
you don’t want to start the daemon from the pipewire that is installed from the
repositories of your Linux distribution.</p>

<p>The solution is to tell systemd to start the daemon for the current user session:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl --user start pipewire
</code></pre></div></div>

<p>However, when I did that I had the following error:
<img alt="systemd failed" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/pipewire-systemd-failed.png"/></p>

<p>I checked my log <code class="highlighter-rouge">journalctl --user -u pipewire</code> and the problem was because of an
“error while loading shared libraries: libpipewire-0.2.so”:</p>

<p><img alt="systemd failed log" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/pipewire-systemd-failed-log.png"/></p>

<p>for some reason, <em>systemd</em> wasn’t recognizing my environment. Looking at the
manual page of it I was really happy when I found an option to set an
environment variable. Before executing the following command take care you
dont’t have the LD_LIBRARY_PATH already set in <em>systemd</em>, you can check that with
<code class="highlighter-rouge">systemctl --user show-environment | grep LD_LIBRARY_PATH</code>. If the output is
empty, run this command:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl --user set-environment LD_LIBRARY_PATH=$HOME/env/pipewire/lib64
</code></pre></div></div>

<p>Now you can start the daemon:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl --user start pipewire
</code></pre></div></div>

<p><img alt="systemd running" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/pipewire-systemd-running.png"/></p>

<p>Also, you will note that the output says that pipewire is loaded from the
systemd unit user directory which in my case is
<code class="highlighter-rouge">/home/cfoch/.local/share/systemd/user/pipewire.service</code>. That is exactly what I
want.</p>

<p>To test your webcam being shared by multiple applications you can try the
following command in two or more terminals:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gst-launch-1.0 pipewiresrc ! videoconvert ! xvimagesink
</code></pre></div></div>

<p><img alt="multiple pipewiresrc" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/screenshot-gstpipewiresrc.png"/></p>

<p>You can also try one of the pipewire’s examples:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ~/pipewire/builddir/src/examples/
./video-play
</code></pre></div></div>

<p><img alt="video-play sample" src="https://cfoch.github.io/img/posts/2018-08-01-how-i-built-pipewire-from-source/screenshot-pipewire-video-play-sample.png"/></p>

<p>Well… that’s it!</p></div>
    </summary>
    <updated>2018-08-01T18:08:50Z</updated>
    <source>
      <id>https://cfoch.github.io</id>
      <author>
        <name>Fabián Orccón</name>
      </author>
      <link href="https://cfoch.github.io" rel="alternate" type="text/html"/>
      <link href="https://cfoch.github.io/tags/rss/gnome.xml" rel="self" type="application/rss+xml"/>
      <subtitle>Posts with tag "gnome"</subtitle>
      <title>Fabián Orccón - gnome</title>
      <updated>2018-08-05T17:53:52Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/uraeus/?p=2871</id>
    <link href="https://blogs.gnome.org/uraeus/2018/08/01/supporting-developers-on-patreon-and-similar/" rel="alternate" type="text/html"/>
    <title>Supporting developers on Patreon (and similar)</title>
    <summary>For some time now I been supporting two Linux developers on patreon. Namely Ryan Gordon of Linux game porting and SDL development fame and Tanu Kaskinen who is a lead developer on PulseAudio these days. One of the things I often think about is how we can enable more people to make a living from […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>For some time now I been supporting two Linux developers on patreon. Namely <a href="https://www.patreon.com/icculus/overview">Ryan Gordon</a> of Linux game porting and SDL development fame and <a href="https://www.patreon.com/tanuk/overview">Tanu Kaskinen</a> who is a lead developer on PulseAudio these days. </p>
<p>One of the things I often think about is how we can enable more people to make a living from working on the Linux desktop and related technologies. If your reading my blog there is a good chance that you are enabling people to make a living on working on the Linux desktop by paying for RHEL Workstation subscriptions through your work. So a big thank you for that. The fact that Red Hat has paying customers for our desktop products is critical in terms of our ability to do so much of the maintenance and development work we do around the Linux Desktop and Linux graphics stack.</p>
<p>That said I do feel we need more venues than just employment by companies such as Red Hat and this is where I would love to see more people supporting their favourite projects and developers through for instance Patreon. Because unlike one of funding campaigns repeat crowdfunding like Patreon can give developers predictable income, which means they don’t have to worry about how to pay their rent or how to feed their kids.</p>
<p>So in terms of the two Patreons I support Ryan is probably the closest to being able to rely on it for his livelihood, but of course more Patreon supporters will enable Ryan to be even less reliant on payments from game makers. And Tanu’s patreon income at the moment is helping him to spend quite a bit of time on PulseAudio, but it is definitely not providing him with a living income. So if you are reading this I strongly recommend that you support  <a href="https://www.patreon.com/icculus/overview">Ryan Gordon</a> and <a href="https://www.patreon.com/tanuk/overview">Tanu Kaskinen</a> on Patreon. You don’t need to pledge a lot, I think in general it is in fact better to have many people pledging 10 dollars a Month than a few pledging hundreds, because the impact of one person coming or going is thus a lot less. And of course this is not just limited to Ryan and Tanu, search around and see if any projects or developers you personally care deeply about are using crowdfunding and support them, because if more of us did so then more people would be able to make a living of developing our favourite open source software.</p>
<p>Update: Seems I wasn’t the only one thinking about this, Flatpak <a href="https://twitter.com/FlatpakApps/status/1024608893933109248">announced today that application devs can put their crowdfunding information into their flatpaks and it will be advertised in GNOME Software</a>.</p></div>
    </content>
    <updated>2018-08-01T14:35:08Z</updated>
    <category term="Fedora"/>
    <category term="Gaming"/>
    <category term="General"/>
    <category term="GNOME"/>
    <category term="Red Hat"/>
    <author>
      <name>uraeus</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/uraeus</id>
      <link href="https://blogs.gnome.org/uraeus/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/uraeus" rel="alternate" type="text/html"/>
      <subtitle>Blog talking about Fedora, GNOME, GStreamer and related topics</subtitle>
      <title>Christian F.K. Schaller</title>
      <updated>2018-08-01T14:50:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/jonathankang/?p=53</id>
    <link href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/" rel="alternate" type="text/html"/>
    <title>GUADEC 2018</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">It’s been a few weeks after I got back from GUADEC 2018, which was hosted in Almeria, Spain. And I finally manage to find some time to write this blog. First Impression It’s my first time to Spain. And my first impression is that it’s hot here. I arrived at Malaga Airport around 13:30. The … <a class="more-link" href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/">Continue reading <span class="screen-reader-text">GUADEC 2018</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>It’s been a few weeks after I got back from GUADEC 2018, which was hosted in Almeria, Spain. And I finally manage to find some time to write this blog.</p>
<h3><strong>First Impression</strong></h3>
<p>It’s my first time to Spain. And my first impression is that it’s hot here. I arrived at Malaga Airport around 13:30. The moment I stepped out of the airport, I thought: WOW, this is as hot as Beijing. But it turns out Almeria is a lot better. Cheers!</p>
<p>After around 20-hour flight(4-hour layover at CDG), I felt very tired. And another 3.5-hour bus was waiting for me. Unexpectedly, the scenary along the coastline kept me awake all the time. It IS very beautiful. And it’s definitely worthwhile flying to Malaga and take the bus to Almeria.</p>
<h3><strong>Talks</strong></h3>
<p>Talks I enjoyed are:</p>
<ul>
<li>GTK4 Lighting Talks – It’s good the know how things are going in GTK+4, and I’m looking forward to using it.</li>
<li>GNOME Foundation: Looking into the Future – GNOME is expanding! Existing things are ahead!</li>
<li>Migrating from JHBuild to BuildStream – I’m been using jhbuild since I started to contribute to GNOME (in 2014). It’s done its job well, but sometimes it’s painful to use as well. I tried BuildStream a few months ago, it was good except that applications built using it doesn’t have access to your local filesystem(sandboxed in another word). It makes Logs basically useless, and I’m still using the old-fashion JHBuild.</li>
<li>Intern and Newcomer Lighting Talks – It’s always good to see new contributors in GUADEC. And hope they stay contributing to GNOME after GSoC.</li>
</ul>
<h3>BOF</h3>
<p>I participated gitlab CI/CD BOF and Settings BOF. Settings BOF was really productive. We has lots discussions and came up some TODOs. I’ll start working on cleaning up codes in network panel to separate UI code and backend code interacting with NM.</p>
<h3>Social Events</h3>
<p>Various social events make GUADEC my favourite conference. Castle tour and Flamenco show were my top 2 picks. Emm, wait. Beach party make it to top 3 as well. I enjoyed it a lot, although I can’t swim. It definitely encourages me to learn to swim.</p>
<p>Here are some photos</p>

<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/42412488965_05302ea43d_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/42412488965_05302ea43d_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/28548652737_a47a3c4214_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/28548652737_a47a3c4214_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/43370634072_9c23605122_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/43370634072_9c23605122_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/29547630378_18d0f0f32c_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/29547630378_18d0f0f32c_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/42513992835_911ec731df_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/42513992835_911ec731df_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/43370592672_9c0e150859_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/43370592672_9c0e150859_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/41610310750_ec681b83e5_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/41610310750_ec681b83e5_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/41610489070_b3f4518d57_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/41610489070_b3f4518d57_k-150x150.jpg" width="150"/></a>
<a href="https://blogs.gnome.org/jonathankang/2018/08/01/guadec-2018/28548525137_14676fd818_k/"><img alt="" class="attachment-thumbnail size-thumbnail" height="150" src="https://blogs.gnome.org/jonathankang/files/2018/08/28548525137_14676fd818_k-150x150.jpg" width="150"/></a>

<p>In the end, I’d like to thank GNOME Foundation for sponsoring my trip and my employer SUSE for sponsoring my time.</p>
<p><img alt="" class="alignnone size-full wp-image-54" height="125" src="https://blogs.gnome.org/jonathankang/files/2018/08/sponsorship.png" width="230"/></p></div>
    </content>
    <updated>2018-08-01T09:22:34Z</updated>
    <category term="2018"/>
    <category term="GUADEC"/>
    <author>
      <name>jonathankang</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/jonathankang</id>
      <link href="https://blogs.gnome.org/jonathankang/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/jonathankang" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Jonathan's blogs</title>
      <updated>2018-08-01T09:22:34Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-6112936277054198647.post-1900646024710735011</id>
    <link href="https://who-t.blogspot.com/feeds/1900646024710735011/comments/default" rel="replies" title="Post Comments" type="application/atom+xml"/>
    <link href="https://www.blogger.com/comment.g?blogID=6112936277054198647&amp;postID=1900646024710735011" rel="replies" title="0 Comments" type="text/html"/>
    <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default/1900646024710735011" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default/1900646024710735011" rel="self" type="application/atom+xml"/>
    <link href="http://who-t.blogspot.com/2018/08/a-fedora-copr-for-libinput-git-master.html" rel="alternate" title="A Fedora COPR for libinput git master" type="text/html"/>
    <title>A Fedora COPR for libinput git master</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>To make testing libinput git master easier, I set up a <a href="https://copr.fedorainfracloud.org/coprs/whot/libinput-git/">whot/libinput-git Fedora COPR</a> yesterday. This repo gets the push triggers directly from GitLab so it will rebuild with whatever is currently on git master.</p> <p>To use the COPR, simply run: </p><pre><br/>sudo dnf copr enable whot/libinput-git<br/>sudo dnf upgrade libinput<br/></pre> This will give you the libinput package from git. It'll have a date/time/git sha based NVR, e.g. <i>libinput-1.11.901-201807310551git22faa97.fc28.x86_64</i>. Easy to spot at least. <p/><p>To revert back to the regular Fedora package run: </p><pre><br/>sudo dnf copr disable whot/libinput-git<br/>sudo dnf distro-sync "libinput-*" <br/></pre><p/> <p>Disclaimer: This is an automated build so not every package is tested. I'm running git master exclusively (from a a ninja install) and I don't push to master unless the test suite succeeds. So the risk for ending up with a broken system is low. </p> <p>On that note: if you are maintaining a similar repo for other distributions and would like me to add a push trigger in GitLab for automatic rebuilds, let me know. </p></div>
    </content>
    <updated>2018-08-01T01:07:00Z</updated>
    <published>2018-08-01T01:07:00Z</published>
    <category scheme="http://www.blogger.com/atom/ns#" term="libinput"/>
    <author>
      <name>Peter Hutterer</name>
      <email>noreply@blogger.com</email>
      <uri>https://www.blogger.com/profile/17204066043271384535</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-6112936277054198647</id>
      <category term="git"/>
      <category term="compiz"/>
      <category term="configuration"/>
      <category term="xkb"/>
      <category term="x"/>
      <category term="fedora"/>
      <category term="tig"/>
      <category term="multitouch"/>
      <category term="libratbag"/>
      <category term="tutorial"/>
      <category term="wayland"/>
      <category term="xorg.conf"/>
      <category term="input device properties"/>
      <category term="workflow"/>
      <category term="gnome-device-setup"/>
      <category term="mpx"/>
      <category term="outdoors"/>
      <category term="gnome"/>
      <category term="xds"/>
      <category term="xi2"/>
      <category term="wacom"/>
      <category term="evemu"/>
      <category term="xorg"/>
      <category term="xlib"/>
      <category term="libinput"/>
      <category term="hal"/>
      <category term="synaptics"/>
      <category term="freedesktop.org"/>
      <category term="xts"/>
      <category term="evtest"/>
      <category term="evdev"/>
      <author>
        <name>Peter Hutterer</name>
        <email>noreply@blogger.com</email>
        <uri>https://www.blogger.com/profile/17204066043271384535</uri>
      </author>
      <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://who-t.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <title>Who-T</title>
      <updated>2018-08-03T03:38:27Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/despinosa/?p=299</id>
    <link href="https://blogs.gnome.org/despinosa/2018/07/31/gnome-data-access-6-0/" rel="alternate" type="text/html"/>
    <title>GNOME Data Access 6.0</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">At master there are a set of fixes for GDA Library and its GTK+ widgets, its Control Center for Data Sources Management and its powerful GDA Browser. Next major 6.0 release, is breaking API/ABI from older releases, in order to improve GObject Introspection bindings, including Vala ones. One step forward to use Meson build system, … <a class="more-link" href="https://blogs.gnome.org/despinosa/2018/07/31/gnome-data-access-6-0/">Continue reading<span class="screen-reader-text"> "GNOME Data Access 6.0"</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>At master there are a set of fixes for GDA Library and its GTK+ widgets, its Control Center for Data Sources Management and its powerful GDA Browser.</p>
<p>Next major 6.0 release, is breaking API/ABI from older releases, in order to improve GObject Introspection bindings, including Vala ones.</p>
<p>One step forward to use Meson build system, has been done too. Indeed, that work helps to speed up development.</p>
<p>Please tryout GDA Graphical User Interfaces, that will expose more and issues, before a final release.</p>
<h2>Screenshots</h2>
<p>GDA Browser Initial Connection:</p>
<p><img alt="" class="alignnone wp-image-302" height="494" src="https://blogs.gnome.org/despinosa/files/2018/07/GdaBrowserInit-31jul2018-300x282.png" width="526"/></p>
<p>Gda Browser Adding values to a Data Base Table:</p>
<p><img alt="" class="alignnone size-medium wp-image-303" height="240" src="https://blogs.gnome.org/despinosa/files/2018/07/Captura-de-pantalla-de-2018-07-31-16-54-05-300x240.png" width="300"/></p>
<p>Gda Browser Data Manager using a Table as Source:</p>
<p><img alt="" class="alignnone wp-image-304" height="398" src="https://blogs.gnome.org/despinosa/files/2018/07/Captura-de-pantalla-de-2018-07-31-16-54-59-300x231.png" width="517"/></p>
<p>Gda Browser running SQL queries, this include any other like select, create databases, create tables and views, insert data, and any other supported by the provider.</p>
<p><img alt="" class="alignnone wp-image-305" height="397" src="https://blogs.gnome.org/despinosa/files/2018/07/Captura-de-pantalla-de-2018-07-31-16-55-56-300x231.png" width="516"/></p>
<p>GDA Control Center, allows to pre-configure, connections to data baser server, to save all required connection parameters, with an easy to use UI:</p>
<p><img alt="" class="alignnone wp-image-306" height="421" src="https://blogs.gnome.org/despinosa/files/2018/07/Captura-de-pantalla-de-2018-07-31-16-47-47-300x218.png" width="579"/></p>
<h2>Use in your application</h2>
<p>All above screenshots, use a set of pre-defined GTK+ 3.0 widgets, so you can embed any of them in your own application, while GDA Browser, still powerful, is just for demonstration.</p></div>
    </content>
    <updated>2018-07-31T22:22:27Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>despinosa</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/despinosa</id>
      <link href="https://blogs.gnome.org/despinosa/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/despinosa" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Daniel Espinosa</title>
      <updated>2018-07-31T22:22:27Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-4394565682263312039.post-5982940313280994169</id>
    <link href="https://opensource-usability.blogspot.com/feeds/5982940313280994169/comments/default" rel="replies" title="Post Comments" type="application/atom+xml"/>
    <link href="https://opensource-usability.blogspot.com/2018/07/the-next-step-in-open-data-is-open.html#comment-form" rel="replies" title="0 Comments" type="text/html"/>
    <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default/5982940313280994169" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default/5982940313280994169" rel="self" type="application/atom+xml"/>
    <link href="https://opensource-usability.blogspot.com/2018/07/the-next-step-in-open-data-is-open.html" rel="alternate" title="The next step in open data is open source" type="text/html"/>
    <title>The next step in open data is open source</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Governments at all levels are moving to embrace open data, where governments share public data proactively with citizens. Open data can be used, reused, mixed, and shared by anyone.<br/><br/>For example, The US Government has an open data portal that publishes data on various topics, including agriculture, education, energy, finance, and other public data sets. Where I work (Ramsey County, Minn.) we established an open data portal that shares expenses and other public data about the county that users can access in different views.<br/><br/>Through open data, governments become more transparent. We have seen this in several instances. The Oakland Police Department used a <a href="https://news.stanford.edu/2016/06/15/stanford-big-data-study-finds-racial-disparities-oakland-calif-police-behavior-offers-solutions/">2016 open data study from Stanford University</a> to address racial bias in how officers behave towards African Americans versus Caucasians during routine traffic stops. In 2017, Steve Ballmer launched the <a href="https://usafacts.org/">USAFacts</a> website that uses open data to reveal how governments spend tax dollars to benefit citizens. Also from 2017, Los Angeles, California’s comprehensive <a href="http://cleanstreetsla.com/">“Clean Streets LA” initiative</a> uses <a href="https://datasmart.ash.harvard.edu/news/article/turning-dirty-streets-clean-through-comprehensive-open-data-mapping-1001">open data to assess and improve</a> the cleanliness of public streets.<br/><br/>Governments at all levels have recognized that open data feeds citizen engagement. By sharing data in a way that encourages citizens to remix and transform open data to provide new insights, governments and citizens move closer together. According to the <a href="https://opendatabarometer.org/">Open Data Barometer</a>, many municipalities already provide open data for geographic information, transportation, trade, health, and education, with a mix of other open data sets. Those governments that do not yet provide an open data portal are likely working to provide one.<br/><br/>What is the next step beyond open data? After sharing data, what is the next evolution for governments to engage with citizens?<br/><br/>I believe that next step is open source. Where we provide government data sets for anyone to view, adapt, and remix, we need to offer government source code for others to view, adapt, and remix.<br/><br/>While there is a balance to be made in moving to government open source, the default should be to share as much source code as possible. Just as governments found a balance in providing open data, government open source must consider what software can and cannot be shared as open source software. In the same way that some data needs to remain private because it identifies individuals or because it contains certain nonpublic data, some government source code may need to remain “closed source.”<br/><br/>In adopting government open source, we should follow the open data model. The default in government open data is to share as much data as possible, to release public data for public consumption. That should be the same with government open source. In cases where government application development teams write custom software, we should make as much of our source code available to the public as possible.<br/><br/>Some government agencies are already moving to an open source model, and that is good. In August 2016, US Chief Information Officer Tony Scott and US Chief Acquisitions Officer Anne Rung issued instructions for federal departments and agencies “to release <a href="https://sourcecode.cio.gov/">at least 20 percent of new custom-developed code</a> as Open Source Software (OSS) for three years.” In support of this directive, the US Government established an open source portal at <a href="https://code.gov/">Code.gov</a> to share government source code under the Creative Commons Zero (CC0) and other open source software licenses. Via the open source portal, users can download open source projects, toolkits, installer profiles, online forms, JavaScript widgets, and other code samples.<br/><br/>The challenge we face in moving to government open source is not technical, but cultural. Many governments have relied on proprietary or “closed source” software for decades. Through the lens of these government IT departments, all software is proprietary. This view often extends to software that is custom-developed by municipalities.<br/><br/>It will take a culture shift for governments to release their source code for public access. But governments faced that same culture shift in moving to open data, and we overcame that cultural inertia. We can do the same with open source.<br/><br/>The benefits to adopting a government open source model are many. Like open data, government open source will provide additional transparency to citizens. Users will be free to investigate the source code, and re-use it for other purposes. Motivated citizen developers may modify the source code to fix bugs or add new features, and contribute those improvements back to the government. This last example is the ideal model, providing a feedback loop of engagement where the government partners with its citizens to improve services.<br/><br/>I believe the next iteration from open data is open source. I encourage government Chief Information Officers at all levels to investigate how software created by government application development teams can be made available to outside users. Use the US open source portal as a model to set goals and measure progress. Finally, establish relationships with partners most likely to engage in government open source, including local universities and businesses.<br/><br/>Through open data, governments became more transparent to citizens. With government open source, Chief Information Officers have an opportunity to lead the next evolution in citizen engagement. Through open source, we can take government transparency to the next level.</div>
    </content>
    <updated>2018-07-31T22:08:00Z</updated>
    <published>2018-07-31T22:08:00Z</published>
    <author>
      <name>Jim Hall</name>
      <email>noreply@blogger.com</email>
      <uri>https://plus.google.com/103402568725268123862</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-4394565682263312039</id>
      <author>
        <name>Jim Hall</name>
        <email>noreply@blogger.com</email>
      </author>
      <link href="https://opensource-usability.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://opensource-usability.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>With good usability, everyone wins.</subtitle>
      <title>Open Source Software &amp; Usability</title>
      <updated>2018-08-02T10:48:25Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/despinosa/?p=296</id>
    <link href="https://blogs.gnome.org/despinosa/2018/07/31/vala-0-41-90-released/" rel="alternate" type="text/html"/>
    <title>Vala 0.41.90 Released</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Vala development has never been stopped. New features and better code generation is present in recent development version. This is like a “Beta” version, so go ahead and test with your new code. Checkout that now is possible to annotate an automatic property, with a [GtkChild] attribute, making possible to bind directly your XML builder … <a class="more-link" href="https://blogs.gnome.org/despinosa/2018/07/31/vala-0-41-90-released/">Continue reading<span class="screen-reader-text"> "Vala 0.41.90 Released"</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Vala development has never been stopped. New features and better code generation is present in recent development version.</p>
<p>This is like a “Beta” version, so go ahead and test with your new code.</p>
<p>Checkout that now is possible to annotate an automatic property, with a [GtkChild] attribute, making possible to bind directly your XML builder defined widget to your class, so is easy to create powerful custom widgets.</p>
<p>Also checkout Vala deprecations remove &lt;= 0.22, so your Vala code could fail to compile. Just port to new API bindings.</p>
<p>From release notes:</p>
<ul>
<li>Reintroduce POSIX profile (No GLib/GObject dependency!)</li>
<li>parser: Add support for explicit <code>unlock</code> syntax</li>
<li>vala: Support anonymous definitions of delegates in bindings</li>
<li>codegen: Support automatic properties as GtkChild (makes easy create custom GTK+ widgets)</li>
<li>codegen: Apply G_PARAM_EXPLICIT_NOTIFY on properties with “notify = false”</li>
<li>codegen: Drop support for non-auto property initializer in gobjects</li>
<li>codegen: Avoid using deprecated “g_type_class_add_private”</li>
<li>vala: Constants and signals are not lockable</li>
<li>codegen: Don’t apply ref_sink_function if target_type is floating_reference</li>
<li>vala: Treat floating method-return-type as nullable if error may be thrown</li>
<li>vala: Transfer floating-reference attribute while casting – analyzer: Break cyclic references of BasicBlock</li>
<li>vala: Break reference chain between DataType and Symbol if possible</li>
<li>codegen: Fix invocation of abstract/virtual methods with NoWrapper in compact classes</li>
<li>vala: Report error for invalid base access in method/property of compact class</li>
<li>libvaladoc: Replace void* with corresponding Vala API</li>
<li>codegen: Don’t include the full absolute path in line directives</li>
<li>codegen: Add source_reference to unsupported floating reference error</li>
</ul>
<p>Updated Bindings include:</p>
<ul>
<li>gobject-2.0: Make GLib.Signal a struct of uint and bind g_signal_new*</li>
<li>clutter-1.0: Change type of Clutter.Key.* constants to uint</li>
<li>gdk-3.0: Change type of Gdk.Key.* constants to uint</li>
<li>gtk+-4.0: Change type of Gdk.Key.* constants to uint<br/>
gstreamer: Update from 1.15+ git master</li>
<li>webkit2gtk-4.0: Add JSC namespace to javascriptcoregtk-4.0 and fix depends</li>
<li>Remove clutter-gst-1.0, GStreamer 0.10, rest-0.6,<br/>
tracker-indexer-module-1.0, libsoup-2.2, gdu and gdu-gtk,<br/>
twitter-glib-1.0, mx-1.0</li>
<li>Remove vala-specific deprecations &lt;= vala-0.22</li>
</ul></div>
    </content>
    <updated>2018-07-31T21:52:41Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>despinosa</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/despinosa</id>
      <link href="https://blogs.gnome.org/despinosa/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/despinosa" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Daniel Espinosa</title>
      <updated>2018-07-31T22:22:27Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://eischmann.wordpress.com/?p=1551</id>
    <link href="https://eischmann.wordpress.com/2018/07/31/story-of-gnome-shell-extensions/" rel="alternate" type="text/html"/>
    <title>Story of GNOME Shell Extensions</title>
    <summary>A long time ago (exactly 10 years ago) it was decided that the the shell for GNOME would be written in JavaScript. GNOME 3 was still looking for its new face, a lot of UI experimentation was taking place, and JavaScript looked like the best candidate for it. Moreover it was a popular language on […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A long time ago (exactly 10 years ago) <a href="https://blog.fishsoup.net/2008/10/22/implementing-the-next-gnome-shell/">it was decided</a> that the the shell for GNOME would be written in JavaScript. GNOME 3 was still looking for its new face, a lot of UI experimentation was taking place, and JavaScript looked like the best candidate for it. Moreover it was a popular language on the web, so barriers to entry for new contributors would be significantly lowered.</p>
<p>When you have the shell written in JavaScript you can very easily patch it and alter its look and behaviour. And that’s what people started doing. Upstream was not very keen to officially support extensions due to their nature: they’re just hot patching the GNOME Shell code. They have virtually unlimited possibilities in changing look and behaviour, but also in introducing instability.</p>
<p>But tweaking the shell became really popular. Why wouldn’t it? You can tweak your desktop by simply clicking buttons in your browser. No recompilations, no restarts. So extensions.gnome.org was introduced.</p>
<p>The number of available extensions grew to hundreds and instability some of them occasionally introduced seemed like a fair price for the unlimited tweakability. In the end when the Shell crashed it was just a blink. Xorg held up the session with opened clients, the Shell/Mutter was restarted and the show could go on.</p>
<p>In 2016 GNOME switches to Wayland by default. No Xorg and also nothing to hold up the session with opened clients when the Shell crashes. There is only Mutter as a Wayland compositor, but unfortunately it runs in the same process as GNOME Shell (a decision also made 10 years ago when it also looked like a good idea). If the Shell goes down, so does Mutter. Suddenly harmless blinks became desktop crashes with losing all unsaved data in opened applications.</p>
<p>I read user feedback and problems users are having with Fedora Workstation (and Linux desktop in general) a lot on the Internet. And desktop crashes caused by GS extensions are by far the most frequent problem I’ve seen recently. I read stories like “I upgraded my Fedora to 28 and suddenly my desktop crashes 5 times a day. I can’t take it any more and I’m out of ideas” on daily basis. If someone doesn’t step in and say: “Hey, do you have any GS extensions installed? If so, disable them and see if it keeps crashing. The extensions are not harmless, any error in them or incompatibility between them and the current version of GS can take the whole desktop down”, users usually leave with the experience of unstable Linux desktop. It hurts our reputation really badly.</p>
<p>Are there any ways to fix or at least improve the situation? Certainly:</p>
<ol>
<li>Extensions used to be disabled when the Shell crashed hard (couldn’t be restarted). Since on Wayland it’s the result of every crash, we should do that after every GS crash. And when the user goes back to GNOME Tweak Tool to enable the extensions again, she/he should be told that it was mostly likely one of the 3rd party extensions that made the desktop crash, and she/he should be careful when enabling them.</li>
<li>Decoupling GNOME Shell and Mutter or/and other steps that would bring back the same behaviour like on Xorg: GS crash would not take everything down. This would require major changes in the architecture and a lot of work and GNOME Shell and Mutter developer community has already a lot on their plates.</li>
<li>Discontinuing the unlimited extensions, introducing a limited API they can use instead of hot patching the GS code itself. This would be a very unpopular step because it’d mean that many of the existing extensions would be impossible to implement again. But it may become inevitable in the future.</li>
</ol></div>
    </content>
    <updated>2018-07-31T14:07:35Z</updated>
    <category term="Fedora"/>
    <category term="Linux"/>
    <category term="GNOME"/>
    <category term="gnome"/>
    <category term="desktop"/>
    <category term="Workstation"/>
    <category term="mutter"/>
    <category term="GNOME Shell"/>
    <category term="extensions"/>
    <author>
      <name>eischmann</name>
    </author>
    <source>
      <id>https://eischmann.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://eischmann.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://eischmann.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://eischmann.wordpress.com/osd.xml" rel="search" title="Brno hat" type="application/opensearchdescription+xml"/>
      <link href="https://eischmann.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Blog of Jiri Eischmann</subtitle>
      <title>Brno hat</title>
      <updated>2018-08-05T17:53:06Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://blogs.gnome.org/chergert/?p=1153</id>
    <link href="https://blogs.gnome.org/chergert/2018/07/31/using-leak-sanitizer-with-jhbuild/" rel="alternate" type="text/html"/>
    <title>Using Leak Sanitizer with JHBuild</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">For a subset of GNOME modules, I’m still using jhbuild. I also spend a great deal of time tracking down memory bugs in various libraries. So it is very handy to have libasan.so working with meson -Db_sanitize=address. To make things work, you currently need to: dnf install libasan liblsan (or similar for your OS). Use … <a class="more-link" href="https://blogs.gnome.org/chergert/2018/07/31/using-leak-sanitizer-with-jhbuild/">Continue reading <span class="screen-reader-text">Using Leak Sanitizer with JHBuild</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>For a subset of GNOME modules, I’m still using jhbuild. I also spend a great deal of time tracking down memory bugs in various libraries. So it is very handy to have <code>libasan.so</code> working with <code>meson -Db_sanitize=address</code>.</p>
<p>To make things work, you currently need to:</p>
<ul>
<li>dnf install libasan liblsan (or similar for your OS).</li>
<li>Use meson from git (0.48 development), for <a href="https://github.com/mesonbuild/meson/pull/3955">this bug fix</a>.
</li><li>Configure your meson projects with <code>-Db_sanitize=address</code>.</li>
<li>Create a suppression file for leaks out of our control.</li>
<li>Set some environment variables in <code>~/.config/jhbuildrc</code>.</li>
</ul>
<p>Here is an example of what I put in <code>~/.config/lsan_suppressions.txt</code>.</p>
<pre>leak:FcCharSetCreate
leak:FcLangSetCreate
leak:__nptl_deallocate_tsd
leak:_g_info_new_full
leak:dconf_engine_watch_fast
leak:g_get_language_names_with_category
leak:g_intern_string
leak:g_io_module_new
leak:g_quark_init
leak:libfontconfig.so.1
</pre>
<p>And add this to <code>~/.config/jhbuildrc</code>.</p>
<pre>import os
os.environ['LSAN_OPTIONS'] = 'suppressions=' + \
    os.path.expanduser('~/.config/lsan_suppressions.txt')
</pre>
<p>This has helped me track down a number of bugs in various modules this week and it would be useful if other people were doing it too.</p></div>
    </content>
    <updated>2018-07-31T03:52:03Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>chergert</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/chergert</id>
      <link href="https://blogs.gnome.org/chergert/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/chergert" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Zen and the Art of GNOME</title>
      <updated>2018-07-31T18:36:19Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-4394565682263312039.post-3275255110146083084</id>
    <link href="https://opensource-usability.blogspot.com/feeds/3275255110146083084/comments/default" rel="replies" title="Post Comments" type="application/atom+xml"/>
    <link href="https://opensource-usability.blogspot.com/2018/07/what-icon-says-about-you.html#comment-form" rel="replies" title="1 Comments" type="text/html"/>
    <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default/3275255110146083084" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default/3275255110146083084" rel="self" type="application/atom+xml"/>
    <link href="https://opensource-usability.blogspot.com/2018/07/what-icon-says-about-you.html" rel="alternate" title="What an icon says about you" type="text/html"/>
    <title>What an icon says about you</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><a href="https://www.thoughtco.com/what-is-an-icon-1691049">Icons</a> are an important part of modern computing. We see icons everywhere, from actions on the desktop to navigation in an application to action icons on a website. You can't go long without seeing an icon.<br/><br/>When I first started doing usability testing, I focused on icons. How will users perceive the function exposed by a single button, especially if that button is an icon? Icons can be abstract or representative. For example: in a word processing program, what icon would you click to print a document? The icon you have in mind probably looks something like this: (<a href="https://commons.wikimedia.org/wiki/Category:Printer_icons">*wikimedia</a>)<br/><div class="separator" style="clear: both; text-align: center;"><a href="https://2.bp.blogspot.com/-nkDG0dlXVOU/W1-JXNQQtgI/AAAAAAAAEDU/6Z65GkShm_cLpVIS_TIkM0CsiEVD6wHxQCLcBGAs/s1600/48px-Gnome-printer.svg.png" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="https://2.bp.blogspot.com/-nkDG0dlXVOU/W1-JXNQQtgI/AAAAAAAAEDU/6Z65GkShm_cLpVIS_TIkM0CsiEVD6wHxQCLcBGAs/s1600/48px-Gnome-printer.svg.png"/></a></div><br/>That is a fairly artistic rendering of a printer. But how simple can you make the printer icon, and still recognize it as a printer? (<a href="https://commons.wikimedia.org/wiki/Category:Printer_icons">*wikimedia</a>)<br/><div class="separator" style="clear: both; text-align: center;"><a href="https://4.bp.blogspot.com/-gcSGHWj8T24/W1-JXJtaAGI/AAAAAAAAEDY/H5VGMQW1xtw7XHpZdCo61XjElTygRyNQwCLcBGAs/s1600/48px-High-contrast-printer.svg.png" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="https://4.bp.blogspot.com/-gcSGHWj8T24/W1-JXJtaAGI/AAAAAAAAEDY/H5VGMQW1xtw7XHpZdCo61XjElTygRyNQwCLcBGAs/s1600/48px-High-contrast-printer.svg.png"/></a></div><br/>This high contrast icon is still recognizable as a printer to many users. Especially when presented on a toolbar with other icons, usually on the left end of the toolbar near the <i>new-file</i> and <i>open-file</i> and <i>save-file</i> icons, you'd probably recognize this as a printer icon. (In this case, certain icons can be learned based on association. In most applications, the "Print" action is usually near the "New File" and "Save File" actions.)<br/><br/>Branding is another form of an icon. You can associate a product or a brand through its icon. You can immediately recognize certain products through their icons, from the Nike "swoosh," the McDonald's "M," the Apple "apple," and the AT&amp;T "Death Star." Open source software has its own recognizable icons, including <a href="https://en.wikipedia.org/wiki/Tux_(mascot)">Tux the Penguin</a>, the <a href="https://en.wikipedia.org/wiki/GNU">GNU gnu</a>, and <a href="https://en.wikipedia.org/wiki/BSD_Daemon">"Beastie" the BSD Daemon</a>.<br/><br/>Once upon a time, the Netscape "N" was instantly recognizable as the web browser's brand icon. Later, the organization spun off into Mozilla, represented by a less memorable big red dragon head. Finally, we have Firefox, represented by a stylized fox wrapped around a small globe. The fox icon has represented the Firefox brand for years, although now the Firefox organization wants to change the brand icon.<br/><br/>From an <a href="https://venturebeat.com/2018/07/30/mozilla-is-rebranding-firefox-and-wants-your-opinion/">article in <i>Venture Beat</i></a>: "For most people, Firefox refers to a browser, but the company wants the brand to encompass all the various apps and services that the Firefox family of internet products cover," and "The fox with a flaming tail 'doesn't offer enough design tools to represent this entire product family'." The Firefox name will remain, but the branding will change.<br/><br/>This is a tall order. Changing any well-known branding for an organization or a product family is tough. Will users continue to recognize the product as one they have used before? Or will the new branding suggest to users that everything has changed, and the product they've used and known for years has now flipped to something completely different?<br/><br/>Firefox has proposed two possible branding options:<br/><br/><div class="separator" style="clear: both; text-align: center;"><a href="https://3.bp.blogspot.com/-NSTE-eElVGY/W1-OVbtxgTI/AAAAAAAAEDo/QFENeT45t343blyZaWtT9kbE09semSQmgCLcBGAs/s1600/firefox-rebranding-options1.jpg" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="300" src="https://3.bp.blogspot.com/-NSTE-eElVGY/W1-OVbtxgTI/AAAAAAAAEDo/QFENeT45t343blyZaWtT9kbE09semSQmgCLcBGAs/s400/firefox-rebranding-options1.jpg" width="400"/></a></div><br/><i>Venture Beat</i> describes the icons as follows: "The first icon is the Firefox masterbrand icon, an umbrella under which all the product lines will live" and "The next [two] lines, in order, are as follows: general purpose browser icons (including Developer Edition and Nightly colors), singularly-focused browser icons (Firefox Focus and Firefox Reality)"and the last five icons are "new applications and services."<br/><br/>First, let me make some guesses about the new applications and services, represented by the five icons in the last two lines. I'm not sure what the first one represents, but I think the second is some kind of photo service, perhaps something like Instagram or maybe a static photo hosting service like Flickr. At least, that's what the green icon suggests to me. The third icon is clearly some kind of password management service, like LastPass or 1Password; the hexagonal "lock" icon is a clearer representation of a password service.<br/><br/>I'm not sure what the last two are. These are too abstract for me to interpret what they mean, but perhaps the last icon is some kind of interaction service, such as a private chat application.<br/><br/>Jumping back the the rest of the list. The first line of icons (the standard web browser, the in-development web browser, and the nightly-build web browser) are still recognizable to me. I don't use the Firefox Developer Edition or the nightly builds, but the different colors in those two icons suggest to me that they are not the standard web browser.<br/><br/>The System 1 icons are more familiar to me, compared to the current Firefox logo. I think if Firefox used the first row icons from System 1, their users would be satisfied that the browser product isn't completely new.<br/><br/>The second row of icons (including Firefox Focus and Firefox Reality) are a mix for me. I'm not sure what Firefox Focus is, based on this image. The <a href="https://support.mozilla.org/en-US/kb/focus">Firefox Focus web page</a> describes Focus as a "dedicated privacy browser with tracking protection and content blocking." I don't get that from either the System 1 or System 2 icons. Similarly, the icon for Firefox Reality doesn't suggest what Reality does for me. The <a href="https://blog.mozilla.org/blog/2018/04/03/mozilla-brings-firefox-augmented-virtual-reality/">Firefox blog describes Reality</a> as a "cross-platform browser for mixed reality." I don't get "augmented reality" from any of the icons in System 1 or System 2.<br/><br/>What about the "parent" logo, the Firefox masterbrand icon at the top? For me, the System 2 icon better represents the "Firefox" family of products. I get the abstract fox icon from System 1, but I think it's too abstract. When I first saw the icon, I assumed it was a red book icon, but the designer had set the alpha channel to be too transparent, so the yellow diamond underneath the book was visible. (And now you probably can't un-see the "book" icon. Sorry.)<br/><br/>But negative space means something, too. As humans, we naturally look for negative space, and read a lot into what shapes we find there. For example, most people see a rightward arrow in the <a href="https://en.wikipedia.org/wiki/FedEx">FedEx</a> logo, suggesting speed.<br/><br/>Applying this negative space visual concept to the Firefox logos, my mind naturally tries to find meaning in the negative space of the System 2 icons. I'm less bothered by the negative space of the System 2 masterbrand icon, because the negative space forms a rough circle. But look at the first row of icons. What shape is that? I'm confused.<br/><br/>My recommendation to Firefox is to use the System 2 masterbrand icon, but use the first row of the System 1 icons to represent the web browser. Use the green "Photos" icon (or something like it) and the hexagonal "lock" icon for the Password application.<br/><br/>But go back to the drawing board for Focus and Reality, and the three other extra applications. I'm not sure what those represent, so I think they need more work.<br/><br/>Finally, I encourage Firefox to do a quick usability test. They may have done this already to create this first set of design concepts. Find a bunch of users, and show them the icons in isolation. For one set of testers, don't provide context. "What does this icon mean to you?" Let the user give a reply without knowing what application the icon might be used to represent. For another set of testers, provide some context, but don't indicate which icon is intended for which application. "Which icon represents a web browser?" "Which icon represents a Photos application?" You can probably do this with ten testers in each group, but I'd recommend a larger sample such as twenty testers in each group.<br/><br/>Compare your results. Do the unprompted testers associate the same icon with the same application as the prompted users? If the testers have strong agreement, then you've identified icons that most users will recognize for the purpose you intend.</div>
    </content>
    <updated>2018-07-30T22:47:00Z</updated>
    <published>2018-07-30T22:47:00Z</published>
    <author>
      <name>Jim Hall</name>
      <email>noreply@blogger.com</email>
      <uri>https://plus.google.com/103402568725268123862</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-4394565682263312039</id>
      <author>
        <name>Jim Hall</name>
        <email>noreply@blogger.com</email>
      </author>
      <link href="https://opensource-usability.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://opensource-usability.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/4394565682263312039/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>With good usability, everyone wins.</subtitle>
      <title>Open Source Software &amp; Usability</title>
      <updated>2018-08-02T10:48:25Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://ruxandraS.github.io//gnome/2018/07/30/five-or-more-progress-2</id>
    <link href="https://ruxandraS.github.io//gnome/2018/07/30/five-or-more-progress-2.html" rel="alternate" type="text/html"/>
    <title>Five-or-More Modernisation - Now They Move!</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>These past two weeks I have worked on (probably) the most exciting part of modernising the <a href="https://wiki.gnome.org/Apps/Five%20or%20more">Five or More</a> game. After the new changes, the game is officially playable and fun! But still, there is room for more changes. So let’s jump right to the updates.</p>

<p>First of all, if you remember reading <a href="https://ruxandras.github.io/gnome/2018/07/17/five-or-more-progress.html">my previous blog post</a>, there were no means to interact with a shape, or otherwise move it to any desired cell. The cells inside the game board were <a href="https://ruxandras.github.io/assets/images/progress-report-1/4-spawn-next.gif">filled up randomly</a> on click, using the queue on the top left corner of the window, which contained the next shapes to be rendered inside the game area.</p>

<p>Now, all of that changed, and the user can interact with each individual shape rendered on the game board. The pathfinding system I came up with uses the A* algorithm with a Manhattan distance heuristic to determine the shortest path from the current cell to the destination cell chosen by the player.</p>

<p><br/></p>

<div align="center">
	<img src="https://ruxandraS.github.io/assets/images/progress-report-2/1-player-shape-interaction.gif" width="500"/>
	<center>Player interaction with shapes</center>
</div>

<p><br/></p>

<p>Next, I continued to work on making five (or more 😄) shapes of the same kind aligned in a row, column or diagonal, disappear from the board…</p>

<p><br/></p>

<div align="center">
	<img src="https://ruxandraS.github.io/assets/images/progress-report-2/2-match.gif" width="500"/>
	<center>Matching five or more shapes in a row</center>
</div>

<p><br/></p>

<p>… and whenever that happens, the player receives points as a result, which are displayed on the top-right corner of the window.</p>

<p>Once I reviewed the screen recordings, I realised I am actually not as good at playing this game. 🙈</p></div>
    </content>
    <updated>2018-07-30T19:19:40Z</updated>
    <source>
      <id>https://ruxandraS.github.io/</id>
      <author>
        <name>Ruxandra Simion</name>
        <email>ruxandrasimion93@gmail.com</email>
      </author>
      <link href="https://ruxandraS.github.io//gnome.xml" rel="self" type="application/atom+xml"/>
      <link href="https://ruxandraS.github.io//" rel="alternate" type="text/html"/>
      <title>Ruxandra Simion</title>
      <updated>2018-07-30T19:19:40Z</updated>
    </source>
  </entry>

  <entry>
    <id>http://evanwelsh.com/2018/07/16/guadec-thoughts</id>
    <link href="http://evanwelsh.com/2018/07/16/guadec-thoughts/" rel="alternate" type="text/html"/>
    <title>GUADEC Thoughts</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><h1 id="guadec-thoughts">GUADEC Thoughts</h1>

<h2 id="background">Background</h2>

<p>This month I had the amazing opportunity to attend GUADEC, the GNOME community conference in Europe! The GNOME Foundation generously sponsored this trip as part of my Google Summer of Code project and I can’t thank them enough!</p>

<h2 id="location">Location</h2>

<p>This year GUADEC took place in Almería, Spain at the Universidad de Almería. We couldn’t have asked for a better location. The city offered amazing cultural opportunities and the university space was well-maintained, had excellent WiFi, and a very kind staff!</p>

<h2 id="day-0">Day 0</h2>

<p>I arrived!</p>

<h2 id="day-1">Day 1</h2>

<p>I started off GUADEC right by volunteering at check-in. I made many buttons at the merchandise stand for eager attendees and diagnosed some interesting CUPS driver errors.</p>

<p>From there, I moved on to practicing for my lightning talk with Carlos Soriano. All of the interns present gave a short presentation on their work, it served as a great time to bond with the other interns and sync into their work.</p>

<p>After the lightning talks, the first day of GUADEC - gone in a second - came to a close and we moved to the beach for an exciting Beach Party! This was my first taste of the Mediterranean and it wouldn’t be my last.</p>

<h2 id="day-2">Day 2</h2>

<p>I started Day 2 with <a href="https://2018.guadec.org/pages/talks-and-events.html#abstract-30-javascript_in_gnome_in_2018">JavaScript in GNOME in 2018</a> and thoroughly enjoyed the work Philip has put in over the course of this year. I stayed in the room to see <a href="https://2018.guadec.org/pages/talks-and-events.html#abstract-25-making_a_phone_call_with_gnome">Making a Phone Call in GNOME</a> which was an interesting introduction to the upcoming Purism Phone and also a fascinating look into the telephony stack of GNOME. It certainly caught my eye and I will be following their development blog closely.</p>

<p>I took a short break from talks at this point and got together with Avi, my fellow GNOME JavaScript intern, for some interesting discussions on GJS Linting and Developer Experience in the BoF/Hackspace.</p>

<p>I returned to the talks to see some interesting work by Slimbook and then was exciting to attend my first GNOME Annual Meeting! It was great to see the board discuss the future of GNOME and how they plan to allocate the recent donations they’ve received!</p>

<p>At the end of the day a few friends and I split off from the group, grabbed some food from a local market, and had a nice picnic in a local park. We joined the group again for the end of a fantastic castle tour and a beautiful dance show afterwards.</p>

<h2 id="day-3">Day 3</h2>

<p>Today marked the final day of official GUADEC! I very much enjoyed the final lightning talks which were an excellent opportunity for fun GNOME projects, interesting life skills (lock-picking :D), and amazing human beings to all come together.</p>

<p>And with that the official conference was done and it was time to BoF!</p>

<h2 id="day-4">Day 4</h2>

<p>On the first day of BoFs I volunteered my first few hours helping organize t-shirts and cleanup the conference supplies with Kat. From there, I spent time with friends in the hackfest room working some GJS developer tools that we had discussed earlier in the conference.</p>

<p>The day ended with a nice trip to the beach with my fellow interns and we build our first sandcastle. Little did we know this would be the prototype for <a href="https://wiki.gnome.org/GUADEC/2018/Hacking%20days/SandcastleBoF">Sandcastle BoF</a> the following day.</p>

<h2 id="day-5">Day 5</h2>

<p>The second day of BoF(s) was by far my favorite. I sat in on the GUADEC and Theming BoFs and had a great time offering my input and suggestions in addition to hearing interesting viewpoints from around the community.</p>

<p>In the GUADEC BoF we talked a lot about how to better streamline the conference in the future and fix technical and logistical issues going forward. I’m working on better management inside of GitLab (more to follow!) and exploring dedicated hardware for mobile payment systems!</p>

<p>For theming there was a lot of discussion on how to balance the needs of themers, app developers, and the community overall. I think we settled on a good framework moving forward: a palette-style API for downstream distro branding, a more limited, yet specified stock icon pack, and an extended community icon specification for other purposes.</p>

<p>At the end of the day, exhausted. Niclas and I got everyone together for an exciting and amazing Sandcastle BoF! It was an excellent afternoon of everyone in GNOME coming together for some super fun and super relaxing beach time.</p>

<h2 id="day-6">Day 6</h2>

<p>On the final day of BoFs I joined the Developer Center group to discuss GJS’ work on developer documentation and ways forward for GNOME as a community.</p>

<p>We discussed…</p>
<ul>
  <li>A hackfest in February to work on a product</li>
  <li>Standardizing introductory tutorials on one, newcomer-friendly language and offering alternative languages later</li>
  <li>Platforms to build on</li>
  <li>Multiple language support</li>
  <li>Addressing the messy state of Developer Center as it stands today</li>
</ul>

<p>Overall, after this BoF I felt very optimistic for the future of the GNOME development experience.</p>

<p>In the afternoon I worked on GJS with Avi and Philip, but spent a bit of time with the Meson BoF debugging an issue I had with Meson and Babel integration and discussed improving the default build settings for Meson to reduce confusion in instances where files retain their names during compilation (JavaScript compilation).</p>

<p>After a long day, I joined my friends in exploring Almería (we found a wonderful bakery!) before preparing to leave and departing via Bus to Madrid where I hopped on a plane back to home.</p>

<p>Thanks again to the GNOME Foundation!</p>

<p><img alt="Sponsored by the GNOME Foundation" src="http://evanwelsh.com/images/sponsorship.png"/></p></div>
    </content>
    <updated>2018-07-30T17:47:04Z</updated>
    <source>
      <id>http://evanwelsh.com</id>
      <author>
        <name>Evan Welsh</name>
        <email>contact@evanwelsh.com</email>
      </author>
      <link href="http://evanwelsh.com/atom.xml" rel="self" type="application/atom+xml"/>
      <link href="http://evanwelsh.com/" rel="alternate" type="text/html"/>
      <title>Evan Welsh</title>
      <updated>2018-07-31T15:37:04Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:0pointer.net,2018-07-30:/blog/asg-2018-cfp-closes-today.html/</id>
    <link href="http://0pointer.net/blog/asg-2018-cfp-closes-today.html" rel="alternate" type="text/html"/>
    <title>ASG! 2018 CfP Closes TODAY</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>The All Systems Go! 2018 Call for Participation Closes TODAY!</b></p>
<p>The Call for Participation (CFP) for <a href="https://all-systems-go.io/">All Systems Go!
2018</a> will close <em>TODAY</em>, on 30th of
July! We’d like to invite you to submit your proposals for
consideration to <a href="https://cfp.all-systems-go.io/de/ASG2018/cfp">the CFP submission
site</a> quickly!</p>
<p><img alt="ASG image" height="256" src="https://scontent-frx5-1.xx.fbcdn.net/v/t1.0-9/32372869_2062729060632451_4411941877062828032_o.jpg?_nc_cat=0&amp;oh=112809c076e808ede4dee6e50afe2b99&amp;oe=5B8ACDDF" width="512"/></p>
<p>All Systems Go! is everybody's favourite low-level Userspace Linux
conference, taking place in Berlin, Germany in September 28-30, 2018.</p>
<p>For more information please visit <a href="https://all-systems-go.io/">our conference
website</a>!</p></div>
    </summary>
    <updated>2018-07-30T11:36:31Z</updated>
    <author>
      <name>Lennart Poettering</name>
    </author>
    <source>
      <id>http://0pointer.net/blog/</id>
      <link href="http://0pointer.net/blog/" rel="alternate" type="text/html"/>
      <link href="http://0pointer.net/blog/index.rss20" rel="self" type="application/rss+xml"/>
      <title>Pid Eins</title>
      <updated>2018-07-30T11:36:31Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://www.dragonsreach.it/2018/07/30/back-from-guadec-2018/</id>
    <link href="https://www.dragonsreach.it/2018/07/30/back-from-guadec-2018/" rel="alternate" type="text/html"/>
    <title>Back from GUADEC 2018</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Been a while since GUADEC 2018 has ended but subsequent travels and tasks reduced the time to write up a quick summary of what happened during this year’s GNOME conference. The topics I’d like to emphasize mainly are:</p>

<ul>
<li>We’re hiring another Infrastructure Team member</li>
<li>We’ve successfully finalized the cgit to GitLab migration</li>
<li>Future plans including the migration to Openshift</li>
</ul>

<h2 id="gnome-foundation-hirings">GNOME Foundation hirings</h2>

<p>With the recent donation of 1M the Foundation has started recruiting on a variety of different new professional roles including a new Infrastructure team member. On this side I want to make sure that although the <a href="https://www.gnome.org/foundation/careers/devops-sysadmin/">job description</a> mentions the word <strong>sysadmin</strong> the figure we’re looking for is a systems engineer with a proven experience on Cloud computing platforms and tools such as AWS, Openshift and generally configuration management softwares such as Puppet and Ansible. Additionally this person should prove to have a clear understanding of the network and operating system (mainly RHEL) layers.</p>

<p>We’ve already identified a set of candidates and will be proceeding with interviews in the coming weeks. This doesn’t mean we’ve hired anyone already, please keep sending CVs if interested and feeling the position would match your skills and expectations.</p>

<h2 id="cgit-to-gitlab">cgit to GitLab</h2>

<p>As announced on several occasions the GNOME Infrastructure has <a href="https://mail.gnome.org/archives/desktop-devel-list/2018-May/msg00051.html">successfully finalized the cgit to GitLab migration</a>. From a read-only view against .git directories to a fully compliant CI/CD infrastructure. The next step on this side will be deprecating Bugzilla which has already started with bugmasters turning products read-only in case they were migrated to the new platform or by identifying whether any of the not-yet-migrated products can be archived. The idea here is waiting to see zero activity on BZ in terms of new comments to existing bugs and no new bugs being submitted at all (we have redirects in place to make sure whenever enter_bug.cgi is triggered the request gets sent to the /issues/new endpoint for that specific GitLab project) and then turn the entire BZ instance into an HTML archive for posterity and to reduce the maintenance burden of keeping an instance up-to-date with upstream in terms of CVEs.</p>

<p>Thanks to all the involved parties including Carlos, Javier and GitLab itself given the prompt and detailed responses they always provided to our queries. Also thanks for sponsoring our AWS activities related to GitLab!</p>

<h2 id="future-plans">Future plans</h2>

<p>With the service == VM equation we’ve been following for several years it’s probably time for us to move to a more scalable infrastructure. The next generation platform we’ve picked up is going to be Openshift, its benefits:</p>

<ol>
<li>It’s not important where a service runs behind scenes: it only has to run (VM vs pods and containers that are part of a pod that get scheduled randomly on the available Openshift nodes)</li>
<li>Easily scalable in case additional resources are needed for a small period of time</li>
<li>Built-in monitoring starting from Openshift 3.9 (the release we’ll be running) based on Prometheus (+ Grafana for dashboarding)</li>
<li>GNOME services as containers</li>
<li>Individual application developers to schedule their own builds and see their code deployed with one click directly in production</li>
</ol>

<p>The base set of VMs and bare metals has been already configured. Red Hat has been so great to provide the GNOME Project with a set of Red Hat Container Platform (and GlusterFS for heketi-based brick provisioning) subscriptions. We’ll start moving over to the infrastructure in the coming weeks. It’s going to take some good time but in the end we’ll be able to free up a lot of resources and retire several VMs and related deprecated configurations.</p>

<h2 id="misc">Misc</h2>

<p>Slides from the Foundation AGM Infrastructure team report are available <a href="https://www.dragonsreach.it/files/guadec-reports/guadec2018.html">here</a>.</p>

<p>Many thanks to the GNOME Foundation for the sponsorship of my travel!</p>

<p><img alt="GUADEC 2018 Badge" src="https://www.dragonsreach.it/img/2018-GUADEC-badge.png"/></p></div>
    </summary>
    <updated>2018-07-30T11:21:49Z</updated>
    <source>
      <id>https://www.dragonsreach.it/tags/planet-gnome/</id>
      <author>
        <name>Andrea Veri</name>
      </author>
      <link href="https://www.dragonsreach.it/tags/planet-gnome/" rel="alternate" type="text/html"/>
      <link href="https://www.dragonsreach.it/tags/planet-gnome/index.xml" rel="self" type="application/rss+xml"/>
      <subtitle>Recent content in Planet Gnome on Andrea Veri's Blog</subtitle>
      <title>Planet Gnome on Andrea Veri's Blog</title>
      <updated>2018-08-05T17:52:18Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-6112936277054198647.post-1984845639769985260</id>
    <link href="https://who-t.blogspot.com/feeds/1984845639769985260/comments/default" rel="replies" title="Post Comments" type="application/atom+xml"/>
    <link href="https://www.blogger.com/comment.g?blogID=6112936277054198647&amp;postID=1984845639769985260" rel="replies" title="1 Comments" type="text/html"/>
    <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default/1984845639769985260" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default/1984845639769985260" rel="self" type="application/atom+xml"/>
    <link href="http://who-t.blogspot.com/2018/07/libinput-now-has-readthedocs-style.html" rel="alternate" title="libinput now has ReadTheDocs-style documentation" type="text/html"/>
    <title>libinput now has ReadTheDocs-style documentation</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>libinput's documentation started out as doxygen of the developer API - they were the main target 4 years ago. Over time, more and more extra documentation was added and now most of it is aimed at users (for self-debugging and troubleshooting or just to explain concepts and features). Unfortunately, with doxygen this all ends up in the <a href="https://wayland.freedesktop.org/libinput/doc/1.11.3/pages.html">"Related Pages"</a>. The developer API documentation itself became a less important part, by now all the major compositors have libinput support and it doesn't change much. So while it needs to be there, most of the traffic goes to the user documentation (I think, it's not like I'm running stats). </p><p>Something more suited for prose-style docs was needed. I prefer the RTD look so last week I converted most of the libinput documentation into RST format and it's now built with sphinx and the RTD theme. Same URL as before: <b><a href="http://wayland.freedesktop.org/libinput/doc/latest/">http://wayland.freedesktop.org/libinput/doc/latest/</a></b>. </p><p>The biggest difference is that the Developer API Documentation (still doxygen) is now at <b><a href="http://wayland.freedesktop.org/libinput/doc/latest/api/">http://wayland.freedesktop.org/libinput/doc/latest/api/</a></b>, (i.e. add <i>/api/</i> to the link). If you're programming against libinput's API (e.g. because you're writing a compositor), that's where you need to go. </p><p>It's still basically the same content as before, I'll be tidying things up and adding to it over the next few weeks. Hopefully without breaking existing links.  There is probably detritus from the doxygen → rst change floating around, I'll be fixing that too. If you want to help out please don't hesitate, I'll do my best to be quick to review any <a href="https://gitlab.freedesktop.org/libinput/libinput/merge_requests">merge requests</a>. </p></div>
    </content>
    <updated>2018-07-30T04:16:00Z</updated>
    <published>2018-07-30T04:16:00Z</published>
    <category scheme="http://www.blogger.com/atom/ns#" term="libinput"/>
    <author>
      <name>Peter Hutterer</name>
      <email>noreply@blogger.com</email>
      <uri>https://www.blogger.com/profile/17204066043271384535</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-6112936277054198647</id>
      <category term="git"/>
      <category term="compiz"/>
      <category term="configuration"/>
      <category term="xkb"/>
      <category term="x"/>
      <category term="fedora"/>
      <category term="tig"/>
      <category term="multitouch"/>
      <category term="libratbag"/>
      <category term="tutorial"/>
      <category term="wayland"/>
      <category term="xorg.conf"/>
      <category term="input device properties"/>
      <category term="workflow"/>
      <category term="gnome-device-setup"/>
      <category term="mpx"/>
      <category term="outdoors"/>
      <category term="gnome"/>
      <category term="xds"/>
      <category term="xi2"/>
      <category term="wacom"/>
      <category term="evemu"/>
      <category term="xorg"/>
      <category term="xlib"/>
      <category term="libinput"/>
      <category term="hal"/>
      <category term="synaptics"/>
      <category term="freedesktop.org"/>
      <category term="xts"/>
      <category term="evtest"/>
      <category term="evdev"/>
      <author>
        <name>Peter Hutterer</name>
        <email>noreply@blogger.com</email>
        <uri>https://www.blogger.com/profile/17204066043271384535</uri>
      </author>
      <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://who-t.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/6112936277054198647/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <title>Who-T</title>
      <updated>2018-08-03T03:38:27Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/bastian/?p=1479</id>
    <link href="https://blogs.gnome.org/bastian/2018/07/29/developer-center-initiative-meeting-summary-19th-july/" rel="alternate" type="text/html"/>
    <link href="https://blogs.gnome.org/bastian/2018/07/29/developer-center-initiative-meeting-summary-19th-july/#comments" rel="replies" type="text/html"/>
    <link href="https://blogs.gnome.org/bastian/2018/07/29/developer-center-initiative-meeting-summary-19th-july/feed/atom/" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Developer Center Initiative – Meeting Summary 26th July</title>
    <summary type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml">This blog post summarizes the topics discussed at the Developer Center Call hosted on 19th July. 1. Hackfest Announcement A hackfest is planned to take place the 4th and 5th February 2019. We are currently looking for a venue.  If you can help with this, please let add a comment in this Gitlab issue. 1.b … <a class="more-link" href="https://blogs.gnome.org/bastian/2018/07/29/developer-center-initiative-meeting-summary-19th-july/">Continue reading <span class="screen-reader-text">Developer Center Initiative – Meeting Summary 26th July</span> <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://blogs.gnome.org/bastian/files/2018/07/devx-banner.png"><img alt="" class="alignnone size-full wp-image-1445" height="73" src="https://blogs.gnome.org/bastian/files/2018/07/devx-banner.png" width="733"/></a></p>
<p>This blog post summarizes the topics discussed at the Developer Center Call hosted on 19th July.</p>
<h3><strong>1. Hackfest Announcement<br/>
</strong></h3>
<p>A hackfest <a href="https://wiki.gnome.org/Hackfests/DeveloperCenter2019">is planned to take place</a> the 4th and 5th February 2019. We are currently looking for a venue.  If you can help with this, please let add a comment in <a href="https://gitlab.gnome.org/Community/DeveloperPortal/issues/16">this Gitlab issue</a>.</p>
<h4>1.b Other Events</h4>
<p><a href="https://las.gnome.org/conferences/LAS">Libre Application Summit</a> is happening from 6th to 9th September and Sriram is planning on coordinating a BoF-style session about the Developer Center (more info coming soon). If you are interested in this, please contact Sri (or <a href="https://gitlab.gnome.org/Community/DeveloperPortal/issues/17">comment on the Gitlab issue</a>).</p>
<p><a href="https://mail.gnome.org/archives/gnome-doc-list/2018-July/msg00016.html">Shaun mentioned</a> that <a href="http://www.writethedocs.org/conf/cincinnati/2018/">Write the Docs Cincinatti</a> happening on August the 18th to 22th could be a good venue for making a content plan, gap analysis and more.  If anyone is interested in coordinating to make this happen, please contact me or write to the gnome-doc-list.</p>
<h3>2. Developer Center Design Status</h3>
<p>Allan <a href="https://wiki.gnome.org/Design/Whiteboards/DeveloperDocs#Tentative_Design:_Desktop_Site">has made an experimental tentative design in 2016</a> which tries to make something viable based on the existing developer content we have today.</p>
<p><a href="https://wiki.gnome.org/Design/Whiteboards/DeveloperDocs?action=AttachFile&amp;do=get&amp;target=gnome-developer.png"><img alt="" class="alignnone size-large wp-image-1481" height="264" src="https://blogs.gnome.org/bastian/files/2018/07/Screenshot-from-2018-07-29-14-34-07-1024x571.png" width="474"/></a></p>
<p>Note: This design does not yet define details like the exact wording, the exact landing page contents, nor the exact visuals. We would need a web designer to take a look over this.</p>
<p>But Allans design puts the initial structure in place which can be used as foundation for new Developer Center and iterated upon.</p>
<ul>
<li>API Reference section</li>
<li>Design Guidelines section</li>
<li>Tutorials section</li>
<li>Distribute section</li>
</ul>
<h3>3. Developer Center Prototype Status</h3>
<h4>3.a Website Prototype</h4>
<p>Michael Hall has been working on a test instance based on Django which was previously used for the Ubuntu Developer Portal. Michael and Sri <a href="https://bugzilla.gnome.org/show_bug.cgi?id=794984">is currently getting a test instance hosted at GNOME</a> in collaboration with Andrea Veri. For the previous Ubuntu Developer Portal, Michael had made a Django app which pulled in multi-language API references and updated the portal every night.  The Django instance also supported multiple human languages with fallback behavior. It requires more server infrastructure but it could in the long run could support dynamic content such as Q&amp;A for developers, comments on tutorials and code snippet uploading.</p>
<p>There was some discussion about whether a dynamic website system is needed or if a static website system designed for documentation could be enough for our needs. Evan Welsh was looking into using his GJS API Reference project in conjunction with <a href="https://vuepress.vuejs.org/">Vuepress</a> and will present a proof-of-concept for the next call.</p>
<p><strong>EDIT:</strong> To be clear, there has <em>not</em> been made a definitive technological choice yet, but an evaluation will start soon.</p>
<h4>3.b API Reference Prototypes</h4>
<p>The current C API documentation as we know it, is hosted at the Developer Center.</p>
<p>HotDoc is a potential tool for source code inspection which should be investigated, but Philip and Evan (GJS developers) reported issues contributing to the project. Instead they <a href="http://devdocs.baznga.org/">wrote a DevDocs adapter</a> which works by scraping G-I files. Patrick reported that the <a href="https://lazka.github.io/pgi-docs/">PyGObject API reference</a> work using a similar scraping technique, but is based on Sphinx.</p>
<p>Allan argued that if necessary, we could in the very short-term try to stitch something together from different websites, so the initiative does not fall short due to the technical challenge in unifying these technologies. Attempting to solve everything from the start has been one of the reasons to that the initiatives has fallen short in the past.</p>
<h3>4. Written Documentation Status</h3>
<p>The current <a href="https://developer.gnome.org/hig/stable/">Human Interface Guidelines</a> (HIG) and the <a href="https://developer.gnome.org/platform-overview/unstable/">Developer Tutorials</a> are hosted in the <a href="https://gitlab.gnome.org/GNOME/gnome-devel-docs">gnome-devel-docs repository</a>.  The documentation is written in Mallard and edits are made by pushing updates to the gnome-devel-docs git repository. Allan still maintains the HIG today but the developer tutorials are in a mixed state between “still relevant” and “out of date” and lacks editorial control.</p>
<p>There was discussion about moving the documentation to MarkDown or Restructured Text which could also ease editing since Gitlab’s integrated editor supports it and Django supports it.</p>
<h3>Next Developer Center Call</h3>
<p><a href="https://framadate.org/5Ops7pMVYKna4sXs">There is currently a framadate</a> running to find the date for the next call, which will take place in 2 weeks’ time. The agenda so far is:</p>
<ul>
<li>Evaluation of Vuepress and Django test instances.</li>
<li>Short-term plan for the API References.</li>
<li>Short-term plan for documentation writing.</li>
<li>Migration plan for Human Interface Guidelines / other content.</li>
</ul>
<h4>Participation welcome!</h4>
<p>If you are interested in helping with the website or the documentation writing, join the next call or <a href="https://gitlab.gnome.org/Community/DeveloperPortal/issues/15">sign up in this Gitlab issue</a>.</p></div>
    </content>
    <updated>2018-07-29T15:45:33Z</updated>
    <published>2018-07-29T15:45:33Z</published>
    <category scheme="https://blogs.gnome.org/bastian" term="DeveloperExperience"/>
    <author>
      <name>Bastian Ilso Hougaard</name>
      <uri>http://portfolio.rvzt.net</uri>
    </author>
    <source>
      <id>https://blogs.gnome.org/bastian/feed/atom/</id>
      <link href="https://blogs.gnome.org/bastian" rel="alternate" type="text/html"/>
      <link href="https://blogs.gnome.org/bastian/feed/atom/" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">My GNOME hideout..</subtitle>
      <title xml:lang="en-US">Bastian's Bottled Messages</title>
      <updated>2018-08-01T12:55:59Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/bastian/?p=1477</id>
    <link href="https://blogs.gnome.org/bastian/2018/07/29/re-guadec-report/" rel="alternate" type="text/html"/>
    <link href="https://blogs.gnome.org/bastian/2018/07/29/re-guadec-report/#comments" rel="replies" type="text/html"/>
    <link href="https://blogs.gnome.org/bastian/2018/07/29/re-guadec-report/feed/atom/" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Re: GUADEC Report</title>
    <summary type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml">Hi Sébastien, I am truly sorry if the discussion we had on developer documentation has upset you and contributed to your negative experience at GUADEC. 1. From my point of view there was nothing going wrong between you and me. I remember we had a productive discussion at GUADEC. We found out that we have … <a class="more-link" href="https://blogs.gnome.org/bastian/2018/07/29/re-guadec-report/">Continue reading <span class="screen-reader-text">Re: GUADEC Report</span> <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hi Sébastien,</p>
<p>I am truly sorry if the discussion we had on developer documentation has upset you and contributed to your negative experience at GUADEC.</p>
<p>1. From my point of view there was nothing going wrong between you and me.</p>
<p>I remember we had a productive discussion at GUADEC. We found out that we have different opinions. For example, I you told me that you prefer books and written tutorials. I remember telling you that I like video tutorials. I think that in a future developer center, there can be space for both (See [1]).</p>
<p>2. I have not reported you to the code of conduct committee.</p>
<p>I remember an evening we sat at a café outside Civitas and you told me there was negative talk about you. When I heard this I got really confused because it came out of nowhere for me. I did not recall anyone saying “..asshole developers” in my presence at any point during GUADEC. I was being honest back then when I told you this.</p>
<p>I do remember that we went out to eat together on the evenings after our developer documentation discussion. We did not have so much to talk about but I thought it was natural. I am not are really the type of person who naturally can “set the line of conversation”. :-)</p>
<p>If you have any further doubts or questions about my behavior, please let me know.<br/>
If you had the impression that I was attacking or avoiding you, I really apologize deeply, this was never my intention.</p>
<p>-Bastian</p>
<p>[1] https://gitlab.gnome.org/Community/DeveloperPortal/issues/12</p></div>
    </content>
    <updated>2018-07-29T09:15:49Z</updated>
    <published>2018-07-29T09:15:49Z</published>
    <category scheme="https://blogs.gnome.org/bastian" term="Uncategorized"/>
    <author>
      <name>Bastian Ilso Hougaard</name>
      <uri>http://portfolio.rvzt.net</uri>
    </author>
    <source>
      <id>https://blogs.gnome.org/bastian/feed/atom/</id>
      <link href="https://blogs.gnome.org/bastian" rel="alternate" type="text/html"/>
      <link href="https://blogs.gnome.org/bastian/feed/atom/" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">My GNOME hideout..</subtitle>
      <title xml:lang="en-US">Bastian's Bottled Messages</title>
      <updated>2018-08-01T12:55:59Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://ebb.org/bkuhn/blog/2018/07/29/gerv.html</id>
    <link href="http://ebb.org/bkuhn/blog/2018/07/29/gerv.html" rel="alternate" type="text/html"/>
    <title>In Memoriam: Gervase Markham</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Yesterday, we lost an important member of the FLOSS
          community.  <a href="https://en.wikipedia.org/wiki/Gervase_Markham_(programmer)">Gervase
          Markham</a> finally succumbed to his battle with cancer (specifically,
          metastatic adenoid cystic carcinoma).</p>

        <p>I met Gerv in the early 2000s, after he'd already been diagnosed.  He has
          always been very public about his illness.  He was frank with all who knew
          him that his life expectancy was sadly well below average due to that
          illness.  So, this outcome isn't a surprise nor a shock, but it is
          nevertheless sad and unfortunate for all who knew him.</p>

        <p>I really liked Gerv.  I found him insightful and thoughtful.  His
          insatiable curiosity for my primary field — FLOSS licensing —
          was a source of enjoyment for me in our many conversations on the subject.
          Gerv was always Socratic in his approach: he asked questions, rather than
          make statements, even when it was pretty obvious he had an answer of his
          own; he liked to spark debate and seek conversation.  He thoughtfully
          considered the opinions of others and I many times saw his positions change
          based on new information.  I considered him open-minded and an important
          contributor to FLOSS licensing thought.</p>

        <p>I bring up Gerv's open-mindedness because I know that many people didn't
          find him so, but, frankly, I think those folks were mistaken.  It is well
          documented publicly that Gerv held what most would consider particularly
          “conservative values”.  And, I'll continue with more frankness:
          I found a few of Gerv's views offensive and morally wrong.  But Gerv was
          also someone who could respectfully communicate his views.  I never felt
          the need to avoid speaking with him or otherwise distance myself.  Even if
          a particular position offended me, it was nevertheless clear to me that
          Gerv had come to his conclusions by starting from his (a priori) care and
          concern for all of humanity.  Also, I could simply say to Gerv: <q>I really
          disagree with that so much</q>, and if it became clear our views were just
          too far apart to productively discuss the matter further, he'd happily and
          collaboratively find another subject for us to discuss.  Gerv was a
          reasonable man.  He could set aside fundamental disagreements and find
          common ground to talk with, collaborate with, and befriend those who
          disagreed with him.  That level of kindness and openness is rarely seen in
          our current times.</p>

        <p>In fact, Gerv gave me a huge gift without even knowing it: he really
          helped me understand myself better.  Specifically, I have for decades
          publicly stated my belief that the creation and promulgation of proprietary
          software is an immoral and harmful act.  I am aware that many people (e.g.,
          proprietary software developers) consider that view offensive.  I learned
          much from Gerv about how to productively live in a world where the majority
          are offended by my deeply held, morally-founded and well-considered
          beliefs.  Gerv taught me how to work positively, productively and in a
          friendly way alongside others who are offended by my most deeply-held
          convictions.  While I mourn the loss of Gerv today, I am so glad that I had
          that opportunity to learn from him.  I am grateful for the life he had and
          his work.</p>

        <p>Gerv's time with us was too short.  In response, I suggest that we look at
          his life and work and learn from his example.  Gerv set aside his illness
          for as long as possible to continue good work in FLOSS.  If he can do that,
          we can all be inspired by him to set aside virtually any problem to work
          hard, together, for important outcomes that are bigger than us all.</p>

        <p>[Finally, I should note that the text above was vetted and approved by
          Gerv, a few months ago, before his death.  I am also very impressed that he
          planned so carefully for his own death that he contacted Conservancy to
          seek to assign his copyrights for safe keeping and took the time to review
          and comment on the text above. ]</p></div>
    </summary>
    <updated>2018-07-29T04:37:23Z</updated>
    <author>
      <name>Bradley M. Kuhn</name>
      <email>bkuhn@ebb.org</email>
    </author>
    <source>
      <link href="http://ebb.org/bkuhn/blog/rss.xml" title="Bradley M. Kuhn's Blog ( bkuhn )"/>
      <updated>2018-07-29T04:37:23Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://blogs.gnome.org/chergert/?p=1148</id>
    <link href="https://blogs.gnome.org/chergert/2018/07/28/1148/" rel="alternate" type="text/html"/>
    <title>Unintended discomfort</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I had the impression that Christian Hergert, in a group discussion where I was present, was mocking me, thinking that I was not able to understand him (I had a discussion with him just before, where indeed I didn’t understand what he was saying, he needed to re-explain several times until I understood). Absolutely not. … <a class="more-link" href="https://blogs.gnome.org/chergert/2018/07/28/1148/">Continue reading <span class="screen-reader-text">Unintended discomfort</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><blockquote><p>I had the impression that Christian Hergert, in a group discussion where I was present, was mocking me, thinking that I was not able to understand him (I had a discussion with him just before, where indeed I didn’t understand what he was saying, he needed to re-explain several times until I understood).</p></blockquote>
<p>Absolutely not. I’m deeply appreciative of your work. But intentions mean very little if people’s feelings are hurt. And for the unintended discomfort I caused you, I apologize.</p></div>
    </content>
    <updated>2018-07-28T19:21:15Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>chergert</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/chergert</id>
      <link href="https://blogs.gnome.org/chergert/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/chergert" rel="alternate" type="text/html"/>
      <subtitle>Just another GNOME Blogs site</subtitle>
      <title>Zen and the Art of GNOME</title>
      <updated>2018-07-28T19:21:15Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/swilmet/?p=461</id>
    <link href="https://blogs.gnome.org/swilmet/2018/07/28/guadec-report/" rel="alternate" type="text/html"/>
    <title>GUADEC report</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I prefer to be honest, not everybody has a good experience when going to the GUADEC conference, for me it was a really bad experience. I’ve stopped all my GNOME contributions since then (and I don’t think I will come … <a href="https://blogs.gnome.org/swilmet/2018/07/28/guadec-report/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I prefer to be honest, not everybody has a good experience when going to the GUADEC conference, for me it was a really bad experience. I’ve stopped all my GNOME contributions since then (and I don’t think I will come back anytime soon).</p>
<p><code>Edit: insert here something that didn't go well.</code></p>
<p>The days after, the conference started, there was 3 days of talks, the two talks that I enjoyed the most was PipeWire and GTK 4. I also enjoyed the lightning talk by Britt Yazel on neuroscience research (my job is as a software developer in that field). It was also great to see the announcement about the GNOME Foundation hiring more people, including a GLib/GTK developer.</p>
<p><code>Edit: insert here several things that didn't go well.</code></p>
<p>I nevertheless want to thank the GNOME Foundation for sponsoring my travel and accommodation for the conference.</p>
<p><img alt="" class="aligncenter size-full wp-image-469" height="125" src="https://blogs.gnome.org/swilmet/files/2018/07/sponsored-by-foundation.png" width="230"/></p>
<h2>A look back at my contributions</h2>
<p>My <a href="https://wiki.gnome.org/S%C3%A9bastienWilmet">wiki page</a> has a nice overview and my <a href="https://liberapay.com/swilmet/">Liberapay profile</a> has more background information on <em>why</em> I was doing all that.</p>
<p>Some stats:</p>
<p>I was the (only) maintainer of 6 modules hosted on gitlab.gnome.org, the total amount of lines of code for those 6 modules is 160k (counting only <code>*.{c,h,vala}</code> files, counted the same way as <code>wc -l</code>). From those 160k lines of code, git blame reports 120k lines where I did the last modification. This doesn’t count my other contributions where I’m not the maintainer, for example in gedit, nor my other (smaller) GNOME-related projects on GitHub.</p>
<p>From all the git repos that I contributed to and hosted on gnome.org, I have more than 6000 commits, counting only the master branches.</p>
<p>To date, two modules that I maintained have zero known bugs! <a href="https://wiki.gnome.org/Projects/gspell">gspell</a> and <a href="https://wiki.gnome.org/Apps/Devhelp">Devhelp</a>. On their bug trackers there are only enhancement/feature requests. Something extremely rare for any piece of open source software used by more people than just the developer. For gspell it’s been mostly like this since more than one year, so I don’t think lots of bug reports will suddenly be reported for those two modules.</p>
<p>There are other reasons why I leave the project. Since several years I like GTK less and less. The GtkUIManager/GtkAction deprecation/removal is really painful, and I learned at the GTK BoF that it’s planned to remove GtkTreeView once there is a complete replacement for it. The GtkTreeView removal (in a next major version) would be even more painful, there are some big and complex chunks of code using it, with custom GtkTreeModels etc. The need to rewrite all those features will be the last straw for many developers (if it was not already the case before).</p>
<p>To end this blog post with a positive note, I learned a lot by contributing to GNOME. I liked doing API design, creating higher-level APIs, finding a new design pattern, etc. Also the fact that what I did was useful, gspell and GtkSourceView are probably installed on millions of computers (but there are no precise usage statistics, something that I would have liked since the beginning (I like statistics! :-) Oh, maybe it’s a clue for what kind of software I will want to develop next.)).</p></div>
    </content>
    <updated>2018-07-28T17:23:23Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>swilmet</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/swilmet</id>
      <link href="https://blogs.gnome.org/swilmet/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/swilmet" rel="alternate" type="text/html"/>
      <subtitle>Timewind</subtitle>
      <title>Sébastien Wilmet</title>
      <updated>2018-07-30T16:37:23Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://alexfazakas.wordpress.com/2018/07/28/guadec-2018/</id>
    <link href="https://alexfazakas.wordpress.com/2018/07/28/guadec-2018/" rel="alternate" type="text/html"/>
    <title>GUADEC 2018</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This july I attended the Gnome Users and Developers European Conference taking place in Almería, Spain. Initially, I had no idea what to expect out of it. I have been told it’s a great event with people from all around the world and a lot of fun stuff going on. After booking both my flights… <a class="more-link" href="https://alexfazakas.wordpress.com/2018/07/28/guadec-2018/">Continue reading <span class="screen-reader-text">GUADEC 2018</span> <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This july I attended the <strong>G</strong>nome <strong>U</strong>sers <strong>a</strong>nd <strong>D</strong>evelopers <strong>E</strong>uropean <strong>C</strong>onference taking place in Almería, Spain.</p>
<p>Initially, I had no idea what to expect out of it. I have been told it’s a great event with people from all around the world and <strong>a lot</strong> of fun stuff going on. After booking both my flights and my lodging, first thing I did was sign up for the event. The registration process gave us the option of volunteering there. Having attended a few other events (<em>read: music festivals, heh</em>) as a volunteer and barely knowing anyone who would be at GUADEC (aside from my mentor and a couple of fellow GSoC students), I concluded this would be a good way to make new friends while helping around wherever needed. I am glad to say this was a great call and I enjoyed it a lot. Registration desk was mostly what I helped with, but at need, I also helped with introducing speakers (which also meant I introduced my mentor Carlos’ talk!), handing microphones at the Q&amp;A part of the talks and a few other things. Volunteering felt great and (should I attend next year’s GUADEC) I’d love to get more involved in it, maybe even coordinate the volunteers or help coordinating them.</p>
<p>While volunteering was fun, the nitty-gritty of GUADEC are the talks and BoF’s (<strong>B</strong>irds <strong>o</strong>f a <strong>F</strong>eather) taking place. I attended quite a few of these (and thoroughly enjoyed as I previously had very low knowledge on the subjects) such as: Matthew Leeds’ “P2P distribution of flatpaks and ostrees” (which made me realize a few things about how we currently distribute our products and had a really good demo at the end to wrap everything up nicely), Kat’s “Plan your testing” (which, as you might’ve guessed, I wanted to attend considering my project’s main focus), Benjamin Otte’s “Have you ever developed for a GPU?” (One of my favorite talks as it seemed to have a different approach compared to the others and put things into perspective with simple yet self-explanatory demos), Carlos Soriano’s “DevOps for GNOME” (whose approach might’ve just revolutionized GNOME in the last year or so) or Tobias Bernard’s “Designing GNOME Mobile” (which, again, felt like a breath of fresh as the subject fit Tobias like a glove and it stirred up further discussion on the matter from the attendees). During the BoF’s days, I took part to the GitLab workshop which showed intricacies on how the gitlab ins and outs work on large scale projects and (one of my favorites!) the Beach BoF! On the first BoF day I managed to get most of us interns together for an evening at the beach. Sooner or later, it all turned into a sandcastle competition! Fun was plenty and two fellow interns decided to create their own BoF at the beach the following day (and it was a success, bringing together both the new blood and the veterans of the GNOME community in order to have some fun together). While I barely knew anyone coming here, everyone was friendly, welcoming and overall quite chatty so the social events were a resounding success (the castle visit and the flamenco show being my top 2 picks!). I can (and am glad to) wholeheartedly say I left GUADEC with more friends than I had before getting off my flight there.</p>
<p>All in all, I would like to thank all of the people whom I got to know better at this event: Sam, Matthew, Niclas, Ruxandra, Iulian, Jiahui, Bastian, Julian, Jordan, Carlos, Kat, Ben and all of the lovely GNOME people who made me feel I’m part of their community!</p>
<p>I’d love to wrap this up with a photo from the Beach BoF (courtesy of Sri Ramkrishna):</p>
<p><img class="wp-image-43 size-full" src="https://alexfazakas.files.wordpress.com/2018/07/image.jpg?w=739"/></p></div>
    </content>
    <updated>2018-07-28T11:38:18Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>alexfazakas</name>
    </author>
    <source>
      <id>https://alexfazakas.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://alexfazakas.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://alexfazakas.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://alexfazakas.wordpress.com/osd.xml" rel="search" title="ALEXANDRU FAZAKAS" type="application/opensearchdescription+xml"/>
      <link href="https://alexfazakas.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>ALEXANDRU FAZAKAS</title>
      <updated>2018-08-05T17:54:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/dcbw/?p=850</id>
    <link href="https://blogs.gnome.org/dcbw/2018/07/27/the-ascendance-of-nftables/" rel="alternate" type="text/html"/>
    <title>The Ascendance of nftables</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">iptables is the default Linux firewall and packet manipulation tool. If you’ve ever been responsible for a Linux machine (aside from an Android phone perhaps) then you’ve had to touch iptables. It works, but that’s about the best thing anyone can say about it. At Red Hat we’ve been working hard to replace iptables with … <a class="more-link" href="https://blogs.gnome.org/dcbw/2018/07/27/the-ascendance-of-nftables/">Continue reading <span class="screen-reader-text">The Ascendance of nftables</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><figure class="wp-caption aligncenter" id="attachment_851" style="width: 660px;"><a href="https://www.flickr.com/photos/fdecomite/8254217455/"><img alt="" class="size-large wp-image-851" height="202" src="https://blogs.gnome.org/dcbw/files/2018/07/sunset-1024x314.jpg" width="660"/></a>The Sun sets on iptables (image by fdecomite, CC BY 2.0)</figure>
<p>iptables is the default Linux firewall and packet manipulation tool. If you’ve ever been responsible for a Linux machine (aside from an Android phone perhaps) then you’ve had to touch iptables. It works, but that’s about the best thing anyone can say about it.</p>
<p>At Red Hat we’ve been working hard to replace iptables with its successor: <a href="https://netfilter.org/projects/nftables/">nftables.</a> Which has actually been <a href="https://netfilter.org/news.html#2014-01-20b">around for years</a> but for various reasons was unable to completely replace iptables.  Until now.</p>
<p><strong>What’s Wrong With iptables?</strong></p>
<p>iptables is slow. It processes rules linearly which was fine in the days of 10/100Mbit ethernet. But we can do better, and nftables does; it uses maps and concatenations to touch packets as little as possible for a given action.</p>
<p>Most of nftables’ intelligence is in the userland tools rather than the kernel, reducing the possibility for downtime due to kernel bugs. iptables puts most of its logic in the kernel and you can guess where that leads.</p>
<p>When adding or updating even a single rule, iptables must read the entire existing table from the kernel, make the change, and send the whole thing back. iptables also requires locking workarounds to prevent parallel processes from stomping on each other or returning errors. Updating an entire table requires some synchronization across all CPUs meaning the more CPUs you have, the longer it takes. These issues cause problems in container orchestration systems (like OpenShift and Kubernetes) where 100,000 rules and 15 second iptables-restore runs are not uncommon. nftables can update one or many rules without touching any of the others.</p>
<p>iptables requires duplicate rules for IPv4 and IPv6 packets and for multiple actions, which just makes the performance and maintenance problems worse. nftables allows the same rule to apply to both IPv4 and IPv6 and supports multiple actions in the same rule, keeping your ruleset small and simple.</p>
<p>If you’ve every had to log or debug iptables, you know how awful that can be. nftables allows logging and other actions in the same rule, saving you time, effort, and cirrhosis of the liver. It also provides the <a href="https://wiki.nftables.org/wiki-nftables/index.php/Ruleset_debug/tracing">“nft monitor trace”</a> command to watch how rules apply to live packets.</p>
<p>nftables also uses the same netlink API infrastructure as other modern kernel systems like /sbin/ip, the Wi-Fi stack, and others, so it’s easier to use in other programs without resorting to command-line parsing and execing random binaries.</p>
<p>Finally, nftables has integrated set support with consistent syntax rather than requiring a separate tool like ipset.</p>
<p><strong>What about eBPF?</strong></p>
<p>You might have heard that eBPF will replace everything and <a href="https://youtu.be/g0HGqS4O8bA?t=215">give everyone a unicorn</a>. It might, if/when it gets enhancements for accountability, traceability, debuggability, auditability, and broad driver support for XDP. But nftables has been around for years and has most (all?) of these things <span style="text-decoration: underline;">today</span>.</p>
<p><strong>nftables Everywhere</strong></p>
<p>I’d like to highlight the great work by members of my team to bring nftables over the finish line:</p>
<ul>
<li>Phil Sutter is almost done with <a href="https://marc.info/?l=netfilter-devel&amp;m=153201802804443&amp;w=2">compat versions</a> of <a href="https://marc.info/?l=netfilter-devel&amp;m=153264389806144&amp;w=2">arptables and ebtables</a> and has been adding testcases <em>everywhere</em>. He also added a <a href="https://marc.info/?l=netfilter-devel&amp;m=152552505528554&amp;w=2">JSON interface to libnftables</a> (much like /sbin/ip) for easier programmatic use which firewalld will use in the near future.</li>
<li>Eric Garver updated <a href="https://firewalld.org/2018/07/nftables-backend">firewalld</a> (the default firewall manager on Fedora, RHEL, and other distros) to use nftables by default. This change alone will seamlessly flip the nftables switch for countless users. It’s a huge deal.</li>
<li>Florian Westphal figured out how to make <a href="https://marc.info/?l=netfilter-devel&amp;m=152633437413998&amp;w=2">nftables and iptables NAT</a> coexist in the kernel. He also fixed up the iptables compat commands and handles the upstream releases to make sure we can actually use this stuff.</li>
<li>And of course the upstream netfilter community!</li>
</ul>
<p>Thanks iptables; it’s been a nice ride. But nftables is better.</p>
<p> </p></div>
    </content>
    <updated>2018-07-27T19:35:37Z</updated>
    <category term="Blogroll"/>
    <category term="Fedora"/>
    <category term="General"/>
    <author>
      <name>dcbw</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/dcbw</id>
      <link href="https://blogs.gnome.org/dcbw/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/dcbw" rel="alternate" type="text/html"/>
      <subtitle>Mangling your network since 2004</subtitle>
      <title>Dan Williams’ blog</title>
      <updated>2018-07-27T19:35:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>http://olea.org/diario/2018/07/27/EPF_Composer_in_Linux.html</id>
    <link href="http://olea.org/diario/2018/07/27/EPF_Composer_in_Linux.html" rel="alternate" type="text/html"/>
    <title>Running EPF (Eclipse Process Framework) Composer in Linux, v2</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>From time to time I pretend to do practical work with <a href="https://eclipse.org/epf/&quot;">EPF Composer</a> and alwys my first handicap is to get it running natively in Linux but for one reason or another I always got stucked with the provided linux build.</p>

<p>This time I chose a different approach using the Windows build which it’s known it’s working using <a href="https://www.winehq.org/">Wine</a> as a compatibility layer. It worked. These are the installing instructions:</p>

<p>First we’ll create a separate Wine folder and, important, set to Win32 architecture, used in the EPF Composer build_:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export WINEPREFIX=~/.wine-epf-1.5.2
export WINEARCH=win32
</code></pre></div></div>

<p>Now we install Internet Explorer 8 using the nice <a href="https://wiki.winehq.org/Winetricks">winetricks</a> tool since EPF Composer uses it for the HTML forms:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>winetricks ie8
</code></pre></div></div>

<p>Install a Java runtime. I’ve only tried with te Oracle one:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wine jre-8u181-windows-i586.exe
</code></pre></div></div>

<p>In the Wine filesystem unzip the EPF Composer build:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd $WINEPREFIX/drive_c/Program\ Files/
unzip ~/epf-composer-1.5.2-win32.zip
chmod a+x cd $WINEPREFIX/drive_c/Program\ Files/epf-composer/epf.exe
</code></pre></div></div>

<p>And now you should be able to run EPF Composer:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$WINEPREFIX/drive_c/Program\ Files/epf-composer/epf.exe
</code></pre></div></div>

<p>You can launch it from other terminal without declaring the Wine enviroment variables:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>WINEPREFIX=~/.wine-epf-1.5.2 WINEARCH=win32 ~/.wine-epf-1.5.2//drive_c/Program\ Files/epf-composer/epf.exe
</code></pre></div></div>

<p>And that’s it.</p>

<p>I didn’t started to do real work yet but it seems 100% operative.</p>

<p><img alt="" src="http://olea.org/recursos/2018-07-27/EPF_C-wine-2.png" width="350"/><img alt="" src="http://olea.org/recursos/2018-07-27/EPF_C-wine-1.png" width="350"/></p>

<p>As I’m using a 14” HD screen My only important concern are the font sizes. For some reasons changing resolution and font sizes with winecfg gaves some weird results.</p>

<p>Hope this helps.</p></div>
    </summary>
    <updated>2018-07-27T18:53:34Z</updated>
    <category term="EPF"/>
    <category term="wine"/>
    <category term="linux"/>
    <source>
      <id>http://olea.org/</id>
      <author>
        <name>Ismael Olea</name>
      </author>
      <link href="http://olea.org/" rel="alternate" type="text/html"/>
      <link href="http://olea.org/feed-en.xml" rel="self" type="application/rss+xml"/>
      <subtitle>Pastoreando procomunes desde 1994 | Pasturing the commons since 1994.
 - just the English posts</subtitle>
      <title>Ismael Olea — web personal</title>
      <updated>2018-07-27T18:53:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/binli/?p=280</id>
    <link href="https://blogs.gnome.org/binli/2018/07/27/guadec-2018/" rel="alternate" type="text/html"/>
    <title>GUADEC 2018</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Backed from the fantastic GUADEC, now it’s summary time. When I flight to Malaga from Paris, an old guy with Ubuntu bag sit beside me, after a while I knew he’s Michael Hill, which I couldn’t find his photo for local news in BJGUG. It’s the GUADEC magic!! In core days I attended a lot … <a class="more-link" href="https://blogs.gnome.org/binli/2018/07/27/guadec-2018/">Continue reading <span class="screen-reader-text">GUADEC 2018</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><figure class="wp-caption alignnone" id="attachment_288" style="width: 660px;"><a href="https://blogs.gnome.org/binli/files/2018/07/1591853278s.jpg"><img alt="" class="size-large wp-image-288" height="495" src="https://blogs.gnome.org/binli/files/2018/07/1591853278s-1024x768.jpg" width="660"/></a>Almeria from Alcazaba.</figure>
<p>Backed from the fantastic GUADEC, now it’s summary time.</p>
<p>When I flight to Malaga from Paris, an old guy with Ubuntu bag sit beside me, after a while I knew he’s Michael Hill, which I couldn’t find his photo for <a href="https://www.bjgug.org/events/2018gnomeboard/">local news</a> in BJGUG. It’s the GUADEC magic!!</p>
<p>In core days I attended a lot of great talks in this year, I particularly enjoyed Benjamin Otte’s talk on <span style="font-weight: 400;">“GTK4 Lightning talks”, Jonas Ådahl and Carlos Garnacho’s</span> talk on “<span style="font-weight: 400;">The infamous GNOME Shell performance”</span>, <span style="font-weight: 400;">Philip Withnall’s talk on </span><span style="font-weight: 400;">“GLib: What’s new and what’s next?”</span>.</p>
<p><span style="font-weight: 400;">And after the core days, I took part in two workshops, “GitLab Workshop” by Ralf and “</span><span style="font-weight: 400;">Flatpak Workshop” by Alexander Larsson. It’s a good chance to know the inside of flatpak, and learned how to use Gitlab CI in details. </span></p>
<p><span style="font-weight: 400;">After that I attended the Video BoF, helped the video editing, and at that day I found the flowblade was removed in Debian 9 cause of dependency, and it crashed with source code, so I tried flatpak package, found it just show white blank image when I import images. I couldn’t find the <a href="https://github.com/jliljebl/flowblade/issues/508">fix (issue 508)</a> at that time. So I forward to openshot, it could work at least, although it was very dis-fluency when review the video.</span></p>
<p>And of course I met a lot old friends and new friends.  And I also met workmate from Ubuntu Desktop Team, discussed with <span style="font-weight: 400;">Sebastien about </span>the gdm login issue, after that I report <a href="https://gitlab.gnome.org/GNOME/mutter/issues/219">a mutter issue</a> with Daniel suggestion, and in the second day <a href="https://github.com/jadahl">Jonas </a><span style="font-weight: 400;">Ådahl </span>found me in lunch time and gave me a patch for testing. It’s really amazing community!! Thanks Jonas!</p>
<p>There are too much good memories from this year, such as Flamenco,  Castle show, Tapas, Sangria, beautiful beach and Beach BoF.</p>
<figure class="wp-caption alignnone" id="attachment_287" style="width: 660px;"><a href="https://blogs.gnome.org/binli/files/2018/07/1587617993.jpg"><img alt="" class="size-large wp-image-287" height="495" src="https://blogs.gnome.org/binli/files/2018/07/1587617993-1024x768.jpg" width="660"/></a>Beach of Almeria</figure>
<p><span style="color: #333333; font-family: 'Noto Serif', serif; font-size: 17px;">As usual I would like to thanks the GNOME Foundation for sponsoring my trip to Spain and making all this possible. And also thanks Canonical for conference leave.</span></p>
<p>And also thanks for this year organizer <a href="http://olea.org/">Ismael</a>, he provided my invitation letter quickly and helped to push the hotel about the confirmation, so that I could get visa in time.</p>
<figure class="wp-caption alignnone" id="attachment_286" style="width: 660px;"><a href="https://blogs.gnome.org/binli/files/2018/07/Ismeal_s.jpg"><img alt="" class="wp-image-286 size-large" height="494" src="https://blogs.gnome.org/binli/files/2018/07/Ismeal_s-1024x767.jpg" width="660"/></a>Ismael and BinLi</figure>
<p>Hope to see you all at GNOME.Asia 2018 in Taipei!</p>
<p><a href="https://blogs.gnome.org/binli/files/2012/08/sponsored-badge-simple.png"><img alt="" class="alignnone size-full wp-image-118" height="213" src="https://blogs.gnome.org/binli/files/2012/08/sponsored-badge-simple.png" width="213"/></a></p></div>
    </content>
    <updated>2018-07-27T08:22:20Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>Bin Li</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/binli</id>
      <link href="https://blogs.gnome.org/binli/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/binli" rel="alternate" type="text/html"/>
      <subtitle>another GNOME Lover!</subtitle>
      <title>BinLi</title>
      <updated>2018-07-27T15:52:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://csorianognome.wordpress.com/?p=2652</id>
    <link href="https://csorianognome.wordpress.com/2018/07/27/nautilus-3-30/" rel="alternate" type="text/html"/>
    <title>Nautilus 3.30</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Hello all, It’s this time of the year again, a new Nautilus release is on its way to be delivered. This release has been increasing contributions and work done in a steady pace as it has been for the last years, which makes me happy as one of the maintainers of Nautilus. This release had … <a class="more-link" href="https://csorianognome.wordpress.com/2018/07/27/nautilus-3-30/">Continue reading <span class="screen-reader-text">Nautilus 3.30</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hello all,</p>
<p>It’s this time of the year again, a new Nautilus release is on its way to be delivered. This release has been increasing contributions and work done in a steady pace as it has been for the last years, which makes me happy as one of the maintainers of Nautilus. This release had around 140 major contributions (merge requests) including whole features, fixes and improvements. Against our willing, we have included more code than deleted by 3000 lines <img alt="&#x1F609;" class="wp-smiley" src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f609.png" style="height: 1em;"/></p>
<p>I will explain the most visible improvements and changes we have been doing as part of this 6 months effort. But first, a peek on how Nautilus 3.30 looks like:</p>
<p><img alt="3.30.png" class=" size-full wp-image-2655 aligncenter" src="https://csorianognome.files.wordpress.com/2018/07/3-30.png?w=656"/></p>
<h1>New toolbar design</h1>
<p>We have been trying to improve the exposure of available actions and make them available for the list view and for touch devices for over almost 3 years, <a href="https://gitlab.gnome.org/GNOME/nautilus/issues/322">iterating on several designs</a>. We finally came with a solution that we are happy with. As a result the user can now access background actions in list view such as creating templates or extensions like opening in a terminal.</p>
<p>We also implemented a less cluttered path bar and moved the search entry to the same place to give more place for the actual content, the user’s files. Lately, we improved the usage on small resolutions making Nautilus be able to shrink up to 530px. The result is the following:</p>
<div class="jetpack-video-wrapper"><div class="embed-vimeo" style="text-align: center;"><iframe allowfullscreen="allowfullscreen" frameborder="0" height="360" src="https://player.vimeo.com/video/281875390" width="640"/></div></div>
<p>As part of the new design, we also replicated the app menu actions to the hamburger menu so it’s easily accessible in multi-monitor set ups:</p>
<p><img alt="appmenu.png" class=" size-full wp-image-2654 aligncenter" src="https://csorianognome.files.wordpress.com/2018/07/appmenu.png?w=656"/></p>
<p>The end result feels definitely more modern and implements one of the most requested features.</p>
<h1>Dynamic space resizing</h1>
<p>Probably everyone is aware that the code in the icon view of Nautilus is from 20 years ago when gtk+ didn’t exist, so it does everything manually.</p>
<p>One of the most obvious limitations was how the space was distributed between icons, it was not distributed at all and there was always empty space at the end. In previous versions it looked like:</p>
<div class="jetpack-video-wrapper"><div class="embed-vimeo" style="text-align: center;"><iframe allowfullscreen="allowfullscreen" frameborder="0" height="360" src="https://player.vimeo.com/video/281932245" width="640"/></div></div>
<p>Fortunately we came up with a solution for this release, with these results:</p>
<div class="jetpack-video-wrapper"><div class="embed-vimeo" style="text-align: center;"><iframe allowfullscreen="allowfullscreen" frameborder="0" height="360" src="https://player.vimeo.com/video/281875393" width="640"/></div></div>
<p>While the goal is to eventually move to a more modern code and use a proper gtk+ widget, this improves the situation until we can achieve that major goal.</p>
<p>Thanks Nikita Churaev for this work!</p>
<h1>Desktop files aren’t special treated</h1>
<p>When Nautilus had desktop icons we used to manage desktop files in a special way since the desktop was used as a way to launch applications. Last release the desktop was no longer part of the Nautilus code, so we could finally reconsider having desktop files as a special file to be launched or not.</p>
<p>The special treatment of desktop files had several problems, including security concerns (we had a CVE last year!) . Unfortunately the way we had to handle them was a blocker for the major rework of file operations that we are planning. This work will allow proper handling of files operations making them faster and secure.</p>
<p class="row messageRow firstAuthor chat type_buffer_msg userParent" id="e24413969_1532644945604478"><span class="message"><span class="content">The .desktop files are now treated as normal files: their real file name is shown and they open as text files in applications like GEdit. We leave their graphical edition to more featureful tools like Alacarte. We can provide replacements for some of their uses (you can provide use cases in the </span></span> <a href="https://gitlab.gnome.org/GNOME/nautilus/issues/448">ticket</a>). This goes with the vision of having a canonical path for trusting binaries and permissions rather than rely on Nautilus for such a delicate action.</p>
<h1>CI/CD and automatic testing with Flatpak</h1>
<figure class="wp-caption aligncenter" id="attachment_2669" style="width: 496px;"><img alt="pipelines.png" class="alignnone size-full wp-image-2669" src="https://csorianognome.files.wordpress.com/2018/07/pipelines-e1532669958334.png?w=656"/>CI in action</figure>
<p>One of the major work this release has been around making the whole feedback cycle of Nautilus development shorter and make as easy as possible for everyone to test any change we do to give feedback even before the work is implemented.</p>
<p>As part of this, we have improved the experience of Flatpak with Nautilus, created a whole continuous integration (CI) and continuous delivery (CD) system with GitLab and Flatpak that automatically creates an app bundle, so anyone can install any work in progress of Nautilus with a single click.</p>
<figure class="wp-caption aligncenter" id="attachment_2658" style="width: 800px;"><img alt="flatpak" class="alignnone size-full wp-image-2658" src="https://csorianognome.files.wordpress.com/2018/07/flatpak2.png?w=656"/>An example of <a href="https://gitlab.gnome.org/GNOME/nautilus/merge_requests/266">Ernestas work in gtk4</a></figure>
<p>Going to any merge request and clicking the “View app” button will install a Flatpak app bundle where you can try the work in progress. A nightly of Nautilus that updates every day is also available in the <a href="https://wiki.gnome.org/Apps/Nightly">GNOME Nightlies</a>.</p>
<p>It has proven already successful with the toolbar redesign helping us getting early feedback and iterating on it. We hope that from now on everyone try the nightlies and engage with us on Nautilus development by either providing feedback, designs or contributing code.</p>
<p>Also, maybe it will come as a surprise, Nautilus didn’t really have automatic testing. To improve the situation we have invested 3 months on providing automatic testing to Nautilus. Now we have a full framework and batch of tests in the most critical parts like file operations and search. Automatic testing will improve stability and will avoid regressions reaching the user and has already made us find and fix several issues.</p>
<figure class="wp-caption aligncenter" id="attachment_2661" style="width: 631px;"><img alt="tests.png" class="alignnone size-full wp-image-2661" src="https://csorianognome.files.wordpress.com/2018/07/tests.png?w=656"/>Tests running (and passing!)</figure>
<p>Thanks Jordan Petridis, Ernestas Kulik and Alex Fazakas for this work!</p>
<h1>Fast search of recent files</h1>
<p>We have implemented a new search engine for faster results of user files that have been recently used. This will be an improvement specially for users in Ubuntu LTS that don’t have tracker installed and were used to search for files in the overview in Unity.</p>
<p>Thanks Marco Trevisan from Canonical for this work!</p>
<h1>And more…</h1>
<p>We have also work in many more details.</p>
<h3>Only current folder searching</h3>
<p>We have redesigned and added an information bar in case only the current location is being searched:</p>
<p><img alt="search.png" class=" size-full wp-image-2659 aligncenter" src="https://csorianognome.files.wordpress.com/2018/07/search.png?w=656"/></p>
<p>A detail to spot here is that Nautilus has the FTS feature which also takes into account the actual content of the user’s files for wider and better results.*</p>
<p><span style="font-size: small;">* Not available in Ubuntu</span></p>
<h3>“Open in Disks” button</h3>
<p>Advanced tooling for partitions and external devices can now be accessed easily in the properties window. Thanks Rahul Verma for this contribution!</p>
<p><img alt="disks.png" class=" size-full wp-image-2660 aligncenter" src="https://csorianognome.files.wordpress.com/2018/07/disks-e1532640409486.png?w=656"/></p>
<h3>Touch support for menus</h3>
<p>Nautilus now supports popping context menus in touch devices by long pressing a single file or the view itself. This is another step on making sure Nautilus can be used with touch devices, as they become more relevant specially for business like design, sales, marketing and finances. Thanks Jan-Michael Brummer for working on this!</p>
<h1>What’s next?</h1>
<p>I hope you will be glad of this release, it has been a continuous effort of several people during 6 months, and we think it pays off!</p>
<p>While we fix the issues this new code introduces, we are already planning about the work for the next release. So what’s to come?</p>
<p>Ernestas Kulik is working (and sweating it) the port of Nautilus to gtk4. We have created a Flatpak nightly for testing, however it’s still very early and most likely will have major regressions. Our hope is to introduce gtk4 for Nautilus 3.32, we will announce the ready status for testing in the upcoming next 3 weeks.</p>
<p>Apart from that we have many other things, we expose our vision and planning for the project in GitLab. So go ahead and check what is going to come and provide input ahead of time to help us steering the project, check out the <a href="https://gitlab.gnome.org/GNOME/nautilus/issues?label_name%5B%5D=2.+Deliverable">short term vision and planing</a>, the <a href="https://gitlab.gnome.org/GNOME/nautilus/issues?label_name%5B%5D=2.+Stretch">long term vision and planing</a> and lately, the <a href="https://gitlab.gnome.org/GNOME/nautilus/issues?label_name%5B%5D=9.+User+Story">vision and planning with possible user impact</a>.</p>
<p>Thanks to all the contributors!</p></div>
    </content>
    <updated>2018-07-26T22:22:27Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>Carlos Soriano</name>
    </author>
    <source>
      <id>https://csorianognome.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://csorianognome.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://csorianognome.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://csorianognome.wordpress.com/osd.xml" rel="search" title="" type="application/opensearchdescription+xml"/>
      <link href="https://csorianognome.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <updated>2018-08-05T17:52:58Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-GB">
    <id>http://www.gnome.org/~michael/blog/2018/07/26/2018-07-26</id>
    <link href="http://www.gnome.org/~michael/blog/2018-07-26.html" rel="alternate" type="text/html"/>
    <title xml:lang="en-GB">2018-07-26 Thursday.</title>
    <content type="xhtml" xml:lang="en-GB"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
	<li>
		Mail chew, strained away at JQuery with George - eventually
	finding that we need a tabindex to make something focus-able;
	interesting - progress at least.
	</li>
	<li>
		Partner call, sales call, assembled a screen stand with
	George - hopefully gives one better posture; lets see. Still far
	too hot.
	</li>
</ul></div>
    </content>
    <updated>2018-07-26T21:00:00Z</updated>
    <published>2018-07-26T21:00:00Z</published>
    <source>
      <id>http://www.gnome.org/~michael/blog/index.atom</id>
      <author>
        <name>Michael Meeks</name>
        <email>michael.meeks@collabora.com</email>
        <uri>http://www.gnome.org/~michael/blog/index.atom</uri>
      </author>
      <link href="http://www.gnome.org/~michael/blog" rel="alternate" type="text/html"/>
      <link href="http://www.gnome.org/~michael/blog/index.atom" rel="self" type="application/atom+xml"/>
      <rights xml:lang="en-GB">Copyright 1999-2015 Michael Meeks</rights>
      <subtitle xml:lang="en-GB">things, of varying degrees of uselessness, that I did</subtitle>
      <title xml:lang="en-GB">Stuff Michael Meeks is doing</title>
      <updated>2018-07-26T21:00:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/uraeus/?p=2865</id>
    <link href="https://blogs.gnome.org/uraeus/2018/07/26/some-thoughts-on-smart-home-technology/" rel="alternate" type="text/html"/>
    <title>Some thoughts on smart home technology</title>
    <summary>A couple of Months ago we visited IKEA and saw the IKEA Trådfri smart lighting system. Since it was relatively cheap we decided to buy their starter pack and enough bulbs to make the recessed lights in our living rooms smartlight. I got it up and running and had some fun switching the light hue […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A couple of Months ago we visited IKEA and saw the IKEA Trådfri smart lighting system. Since it was relatively cheap we decided to buy their starter pack and enough bulbs to make the recessed lights in our living rooms smartlight. I got it up and running and had some fun switching the light hue and turning the lights on and off from my phone.<br/>
A bit later I got a Google Assistant speaker at Google I/O and the system suddenly became somewhat more useful as I could control the lights by calling out to the google assistant. I was also able to connect our AC system thermostats to the google assistant so we could change the room temperature using voice commands.<br/>
As a result of this I ended up reading up  on smart home technologies and found that my IKEA hub and bulbs was conforming to the ZigBee standard and that I should be able to buy further Zigbee compatible devices from other vendors to extend it. So I ordered a Zigbee compatible in-wall light switch from GE and I also ordered a Zigbee compatible in-ceiling switch from a company called Nue through Amazon. Once I got these home and tried to get them up and running I found that my understanding was flawed as there are two Zigbee standards, the older Zigbee HA and the newer Zigbee LightLink. The IKEA stuff is Zigbee LightLink while at least the GE switch was Zigbee HA and thus the IKEA hub could not control it. So I ended up ordering a Samsung SmartThings hub which supports Zigbee HA, Zigbee LL and the competing system called Z-Wave. At which point I got both my IKEA lights and my two devices working with it.<br/>
In the meantime I had also gotten myself a Google Assistant compatible portable aircon from FrigidAire for my home office (no part of main house) and a Google Assistant compatible fire alarm  from Nest for the same office space.</p>
<p>So having lived in my new smarter home for a while now what are my conclusions? Well first of all that we still have some way to go before this is truly seamless and obvious. I consider myself a fairly technical person, but it still took quite a bit of googling for me to be able to get everything working. Secondly a lot of the smart home stuff feel a bit gimmicky in the end. For instance the Frigidaire portable air conditioner integration with the Google Assistant is more annoying than useful. It basically requires me to start by asking to talk to Frigidaire and then listen to a ton of crap before I can even start trying to do anything. As for the lights we do actually turn them on and off quite a bit using the voice commands (at least I try to until I realize my wife has disconnected the google assistant in order to use its cable to charge her phone :). I also realized that while installing and buying the in-wall switches are a bit more costly and complicated than just getting some smart bulbs it does work a lot better as I can then control the lights using both voice and switch. Because the smart bulbs can not be turned on using voice if you have a normal switch turned off (obviously, but not something I thought about before buying). So getting something like the IKEA bulbs is a nice and cheap way to try this stuff out I don’t see it as our long term solution here. The thermostat we haven’t controlled or queried once since I did the initial testing of its connection to Google assistant.</p>
<p>All in all I have to say that the smart home tech is cute, but it is far from being essential. I might end up putting in more wall switches for the light going forward, but apart from that, having smart home support in a device is not going to drive my purchasing decisions. Maybe as the tech matures and becomes more mainstream it will also become more useful, but as it stands it mostly solves first world problems (although of course there are real gains here for various accessibility situations). </p></div>
    </content>
    <updated>2018-07-26T19:50:09Z</updated>
    <category term="General"/>
    <category term="Oddball entries"/>
    <author>
      <name>uraeus</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/uraeus</id>
      <link href="https://blogs.gnome.org/uraeus/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/uraeus" rel="alternate" type="text/html"/>
      <subtitle>Blog talking about Fedora, GNOME, GStreamer and related topics</subtitle>
      <title>Christian F.K. Schaller</title>
      <updated>2018-08-01T14:50:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/kittykat/?p=455</id>
    <link href="https://blogs.gnome.org/kittykat/2018/07/26/be-a-redshirt-this-guadec-2/" rel="alternate" type="text/html"/>
    <title>How was GUADEC for you?</title>
    <summary>Did you come to GUADEC in Alméria? Did you decide to avoid the sweltering heat and stay home? Were you thwarted by visa bureaucracy? Now is your annual chance to praise and complain. Please give us your GUADEC feedback via the traditional wiki page or…  *drum roll*… this form if you attended GUADEC or this form if […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div style="text-align: justify;">
<div class="wp-caption aligncenter" id="attachment_456" style="width: 1862px;"><a href="https://www.flickr.com/photos/89175706@N00/28434184137/in/pool-guadec2018/"><img alt="" class="wp-image-456 size-full" height="618" src="https://blogs.gnome.org/kittykat/files/2018/07/28434184137_64e6be2f21_o.jpg" width="1852"/></a><p class="wp-caption-text">by guillefuertes, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA 2.0</a></p></div>
</div>
<p>Did you come to GUADEC in Alméria? Did you decide to avoid the sweltering heat and stay home? Were you thwarted by visa bureaucracy?</p>
<p>Now is your annual chance to praise and complain. Please give us your GUADEC feedback via the <a href="https://wiki.gnome.org/GUADEC/2018/Feedback">traditional wiki page</a> or…  *drum roll*… <a href="https://oasis.sandstorm.io/shared/EbW_OEfVIEgJemTDPgpmm6T0ZUqA-rQziozGLxmJjMf">this form if you attended GUADEC</a> or <a href="https://oasis.sandstorm.io/shared/ywcxC0srXiRu2dFYQX_evFRbpXekpnnGSPlfEQAHKWa">this form if you did not</a>.</p>
<p>Big thanks to <a href="https://github.com/Mazurs/">Rūdolfs</a> for sorting out the forms for this year.</p></div>
    </content>
    <updated>2018-07-26T17:37:22Z</updated>
    <category term="Uncategorized"/>
    <category term="gnome"/>
    <category term="guadec"/>
    <author>
      <name>kittykat</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/kittykat</id>
      <link href="https://blogs.gnome.org/kittykat/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/kittykat" rel="alternate" type="text/html"/>
      <title>Kat's log</title>
      <updated>2018-07-26T17:37:22Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blogs.gnome.org/jsparber/?p=145</id>
    <link href="https://blogs.gnome.org/jsparber/2018/07/26/guadec-2018/" rel="alternate" type="text/html"/>
    <title>GUADEC 2018</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">From the 2th of July I have been travelling from Italy all the way to the south Spain by train, to attend GUADEC 2018. During this long trip, I didn’t just sleep, but I kept working on Fractal and some other cool things. The biggest thing I worked on was the refactor of the code … <a class="more-link" href="https://blogs.gnome.org/jsparber/2018/07/26/guadec-2018/">Continue reading <span class="screen-reader-text">GUADEC 2018</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>From the 2th of July I have been travelling from Italy all the way to the south Spain by train, to attend GUADEC 2018. During this long trip, I didn’t just sleep, but I kept working on Fractal and some other cool things.</p>
<p>The biggest thing I worked on was the refactor of the code which handles avatar download and display in Fractal. I removed a lot of code because we had more than 3 different methods to load an avatar. Then I replaced the different methods with an easy to use function, which also handles the fallback when there is no avatar and it needs to be generated from the user’s name. I found that the fractal-api (which should only make http requests to the Matrix homeserver) had a dependency to GTK+. The code which was in the fractal-api to generate a fallback avatar using the username is now available for other projects on <a href="https://crates.io/crates/letter-avatar">crates.</a></p>
<h2>Hackfest on the train <img alt="&#x1F60D;" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.4/72x72/1f60d.png" style="height: 1em;"/></h2>
<p><img alt="" class="aligncenter size-large wp-image-146" height="495" src="https://blogs.gnome.org/jsparber/files/2018/07/photo_2018-07-20_12-08-36-1024x768.jpg" width="660"/></p>
<p>I was travelling with Tobias, and at some point we randomly met Bastian on the train from Madrid to Almera, so the travel turned into a hackfest on the train.</p>
<h2>GUADEC</h2>
<p>This year was my second GUADEC, so it was really exciting to see all people again I met last year. The most awesome thing this year was that many people where not strangers anymore, I knew them already from last year, from IRC or from somewhere else online. The last year was a really exciting year, because I got way more involve in GNOME than I’d ever dreamed of. This year I also volunteered to help out at the info/registration desk which was a lot of fun.</p>
<p>I also gave a 3 min talk about my work as a GSoC student for Fractal. I also met all the other GSoC students and it was really fun to see so many young people working on GNOME, I really hope most of them will stick around also after GSoC.</p>
<p><img alt="" class="aligncenter size-large wp-image-147" height="371" src="https://blogs.gnome.org/jsparber/files/2018/07/photo_2018-07-20_12-23-07-1024x576.jpg" width="660"/></p>
<h2>Icon exporter</h2>
<p>A few months ago, I created a small shell script to export slides form a svg file, but it uses Inkscape and it is terribly slow. During the conference days I started playing around with librsvg to export slides from a svg file, and learned a lot about librsvg. I can’t remember how the idea came up but at some point I was suddenly working on a rust app to export the Adwaita icons from the stencils svg file. This new approach looks really promising, as <a href="https://gitlab.gnome.org/jsparber/svago-export">the new app</a> exports all the symbolic icons in just few seconds. However, right now there are some icons which are not generated correctly, most likely because of rounding errors. I will investigate more and maybe make my first MR to librsvg. I wear a hoodie on a lot of pictures, because it was really cold in some of the rooms, and I can’t stand when the AC is directly over my head.</p>
<p><img alt="" class="aligncenter size-large wp-image-149" height="495" src="https://blogs.gnome.org/jsparber/files/2018/07/photo_2018-07-20_12-37-12-1024x768.jpg" width="660"/></p>
<h2>Going back to Italy</h2>
<p>Tobias and I took also the train to go back home, but we stopped in Granada and Madrid for a couple of days. During the trip home I finished the new room settings layout for Fractal, which was a big piece of work because I tried a couple of new things, which soon will be applied to other parts of Fractal, in order to make the backend split happen (which will in turn enable splitting the app into two separate apps).</p>
<h2>So much fun</h2>
<p>I had so much fun during all the talks, social events, and BOFs. Thank you to all people who came to GUADEC 2018 and a even bigger thank you to all the amazing people who made it happen. I’m already looking forward to next year. I will leave you with picture of the sandcastle BOF at the beach. <img alt="&#x1F609;" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" style="height: 1em;"/></p>
<p><img alt="" class="aligncenter size-large wp-image-151" height="495" src="https://blogs.gnome.org/jsparber/files/2018/07/photo_2018-07-10_01-08-19-1024x768.jpg" width="660"/><br/>
 </p></div>
    </content>
    <updated>2018-07-26T17:23:30Z</updated>
    <category term="Uncategorized"/>
    <author>
      <name>jsparber</name>
    </author>
    <source>
      <id>https://blogs.gnome.org/jsparber</id>
      <link href="https://blogs.gnome.org/jsparber/feed/" rel="self" type="application/rss+xml"/>
      <link href="https://blogs.gnome.org/jsparber" rel="alternate" type="text/html"/>
      <title>Julian's Code Corner</title>
      <updated>2018-07-26T17:23:30Z</updated>
    </source>
  </entry>
</feed>